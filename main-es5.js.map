{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/categories/categories.component.ts","webpack:///src/app/categories/categories.component.html","webpack:///src/app/click-outside.directive.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/hover-class.directive.ts","webpack:///src/app/inventory/inventory.component.ts","webpack:///src/app/inventory/inventory.component.html","webpack:///src/app/loading/loading.component.ts","webpack:///src/app/loading/loading.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/products/products.component.ts","webpack:///src/app/products/products.component.html","webpack:///src/app/recovery-password/recovery-password.component.ts","webpack:///src/app/recovery-password/recovery-password.component.html","webpack:///src/app/reports/reports.component.ts","webpack:///src/app/reports/reports.component.html","webpack:///src/app/sales/sales.component.ts","webpack:///src/app/sales/sales.component.html","webpack:///src/app/shared/components/pagination/pagination.component.ts","webpack:///src/app/shared/components/pagination/pagination.component.html","webpack:///src/app/shared/forms/categories.ts","webpack:///src/app/shared/forms/login.ts","webpack:///src/app/shared/forms/products.ts","webpack:///src/app/shared/forms/recovery.ts","webpack:///src/app/shared/forms/reportObsoleteProduct.ts","webpack:///src/app/shared/forms/sales.ts","webpack:///src/app/shared/forms/users.ts","webpack:///src/app/shared/helpers/auth.guard.ts","webpack:///src/app/shared/helpers/error.interceptor.ts","webpack:///src/app/shared/helpers/jwt.interceptor.ts","webpack:///src/app/shared/helpers/loading.interceptor.ts","webpack:///src/app/shared/helpers/pagination.ts","webpack:///src/app/shared/services/authentication.service.ts","webpack:///src/app/shared/services/categories.service.ts","webpack:///src/app/shared/services/feeds.service.ts","webpack:///src/app/shared/services/loading.service.ts","webpack:///src/app/shared/services/notifications.service.ts","webpack:///src/app/shared/services/products.service.ts","webpack:///src/app/shared/services/reports.service.ts","webpack:///src/app/shared/services/roles.service.ts","webpack:///src/app/shared/services/sales.service.ts","webpack:///src/app/shared/services/user.service.ts","webpack:///src/app/sidenav/sidenav.component.ts","webpack:///src/app/sidenav/sidenav.component.html","webpack:///src/app/users-form/users-form.component.ts","webpack:///src/app/users-form/users-form.component.html","webpack:///src/app/users/users.component.ts","webpack:///src/app/users/users.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","data","type","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","authService","router","title","hidden","events","subscribe","event","isLogged","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","CategoriesComponent","service","formBuilder","route","loading","selectCategory","category","nameField","nativeElement","focus","fillForm","categoryForm","patchValue","emptyForm","getCategories","page","get","response","categoriesInfos","error","html","classes","deleteCategory","delete","group","queryParams","invalid","update","value","message","store","Array","last_page","onSubmit","ClickOutsideDirective","_elementRef","clickOutside","targetElement","clickedInside","contains","emit","HomeComponent","categoriesService","productsService","salesService","feedsService","infos","productsInfos","salesInfos","feedsInfos","HoverClassDirective","elementRef","console","log","classList","add","hoverClass","remove","InventoryComponent","authenticationService","filterType","screenType","getProducts","selectProduct","product","selectedProduct","saleForm","product_id","initializeModal","elems","document","querySelectorAll","instances","init","initializeSelect","sell","controls","setValue","amount","value_sell","classses","haveFilter","search","filter","addAmount","products","changingQueryParams","initializeSaleForm","user_id","loggedUser","currentUserValue","snapshot","navigate","current_page","LoadingComponent","loadingScreenService","_elmRef","_changeDetectorRef","style","display","loadingSubscription","loading$","pipe","status","detectChanges","unsubscribe","LoginComponent","recoveryPass","submitted","recovery","createRecoveryPassord","recoveryForm","loginForm","user","required","returnUrl","login","f","password","NavbarComponent","notificationsService","notifications","read_at","show","clickOutCounter","loggedUserName","showNotifications","hideNotifications","sumClickOut","markAllAsRead","marAsRead","getNotifications","find","name","forEach","result","location","pathname","indexOf","ProductsComponent","categories","handleError","formFields","Object","productForm","errorsFields","fields","includes","map","setErrors","clean","reset","paramMap","querySelector","RecoveryPasswordComponent","token","findToken","recoveryPassword","ReportsComponent","getInventoryDownProducts","inventoryDownProducts","reportInventoryDown","getPdfInventoryDown","window","open","getInventoryDownUrl","downloadPdfInventoryDown","downloadInventoryDownUrl","swipeable","reportObsoleteForm","obsoleteProducts","SalesComponent","paginationHelper","getSales","PaginationComponent","goTo","moduleUrl","paginationNumbers","arrayInfos","actual","getActual","pagination","getPagination","CategoryForm","Login","ProductForm","ref","category_id","application","value_cost","limit_amount","Recovery","email","password_confirmation","ReportObsoleteProduct","authUserId","since","at","minimun_amount","SaleForm","price","UserForm","role_id","cpf","AuthGuard","state","currentUser","url","providedIn","ErrorInterceptor","request","next","handle","err","logout","reload","errors","statusText","JwtInterceptor","access_token","clone","setHeaders","Authorization","LoadingInterceptorService","activeRequests","startLoading","stopLoading","PaginationHelper","arrayOfPages","pages","push","i","getLimiter","array","findIndex","index","length","AuthenticationService","http","post","apiUrl","localStorage","setItem","JSON","stringify","currentUserSubject","removeItem","parse","getItem","asObservable","CategoriesService","put","FeedsService","LoadingService","NotificationsService","ProductsService","ReportsService","report","downloadInventoryDownProducts","RolesService","SalesService","sale","UserService","getAll","SidenavComponent","accordion","UsersFormComponent","roleService","getAllRoles","roles","userForm","UsersComponent","getUsers","usersInfos","authUser","environment","production","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { AuthGuard } from '@shared/helpers/auth.guard';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SalesComponent } from './sales/sales.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { ReportsComponent } from './reports/reports.component';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { UsersFormComponent } from './users-form/users-form.component';\r\nimport { InventoryComponent } from './inventory/inventory.component';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { RecoveryPasswordComponent } from './recovery-password/recovery-password.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'sales', component: SalesComponent, canActivate: [AuthGuard] },\r\n\r\n  { path: 'users', component: UsersComponent, canActivate: [AuthGuard] },\r\n  { path: 'users/:id', component: UsersFormComponent, canActivate: [AuthGuard] },\r\n  { path: 'users-form', component: UsersFormComponent, canActivate: [AuthGuard] },\r\n\r\n  { path: 'products', component: ProductsComponent, canActivate: [AuthGuard] },\r\n  { path: 'products/:id', component: ProductsComponent, canActivate: [AuthGuard] },\r\n\r\n  { path: 'inventory-add', component: InventoryComponent, canActivate: [AuthGuard], data:{type:\"add\"} },\r\n  { path: 'inventory-list', component: InventoryComponent, canActivate: [AuthGuard], data:{type:\"list\"} },\r\n  { path: 'inventory-edit', component: InventoryComponent, canActivate: [AuthGuard], data:{type:\"edit\"} },\r\n  { path: 'inventory-sell', component: InventoryComponent, canActivate: [AuthGuard], data:{type:\"sell\"} },\r\n\r\n  { path: 'categories', component: CategoriesComponent, canActivate: [AuthGuard] },\r\n\r\n  { path: 'reports', component: ReportsComponent, canActivate: [AuthGuard] },\r\n  \r\n  { path: 'recovery-password', component: RecoveryPasswordComponent },\r\n  \r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\nimport { Router, Event } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'front-end';\r\n  hidden :boolean = true;\r\n  constructor(\r\n    private authService: AuthenticationService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.router.events.subscribe((event: Event) => {\r\n      this.hidden = (this.authService.isLogged()) ? false: true;\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<app-loading>\r\n</app-loading>\r\n\r\n<app-navbar [hidden]=\"hidden\"></app-navbar>\r\n<app-sidenav [hidden]=\"hidden\"></app-sidenav>\r\n<main style=\"margin:2% 5% 0% 5%;\" [ngClass]=\"{'inside':!hidden}\">\r\n  <router-outlet></router-outlet>\r\n</main>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { NgxCurrencyModule } from 'ngx-currency';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { JwtInterceptor } from '@shared/helpers/jwt.interceptor';\r\nimport { ErrorInterceptor } from '@shared/helpers/error.interceptor';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { InventoryComponent } from './inventory/inventory.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { SidenavComponent } from './sidenav/sidenav.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { SalesComponent } from './sales/sales.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { UsersFormComponent } from './users-form/users-form.component';\r\nimport { ClickOutsideDirective } from './click-outside.directive';\r\nimport { HoverClassDirective } from './hover-class.directive';\r\nimport { ReportsComponent } from './reports/reports.component';\r\nimport { PaginationComponent } from './shared/components/pagination/pagination.component';\r\nimport { LoadingComponent } from './loading/loading.component';\r\nimport { LoadingInterceptorService } from '@shared/helpers/loading.interceptor';\r\nimport { RecoveryPasswordComponent } from './recovery-password/recovery-password.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ProductsComponent,\r\n    CategoriesComponent,\r\n    InventoryComponent,\r\n    SidenavComponent,\r\n    NavbarComponent,\r\n    SalesComponent,\r\n    HomeComponent,\r\n    ClickOutsideDirective,\r\n    UsersComponent,\r\n    UsersFormComponent,\r\n    HoverClassDirective,\r\n    ReportsComponent,\r\n    PaginationComponent,\r\n    LoadingComponent,\r\n    RecoveryPasswordComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NgSelectModule,\r\n    NgxMaskModule.forRoot(),\r\n    NgxCurrencyModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptorService, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { CategoriesService } from '@shared/services/categories.service';\r\nimport { CategoryForm } from '@shared/forms/categories';\r\nimport * as M from 'materialize-css';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-categories',\r\n  templateUrl: './categories.component.html',\r\n  styleUrls: ['./categories.component.scss']\r\n})\r\n\r\nexport class CategoriesComponent implements OnInit {\r\n  @ViewChild('name') nameField: ElementRef;\r\n\r\n  public categoryForm: FormGroup;\r\n  public categoriesInfos;\r\n  public category;\r\n  public loading: boolean = false;\r\n\r\n  constructor(\r\n    private service: CategoriesService,\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.categoryForm = this.formBuilder.group(new CategoryForm);\r\n    this.route.queryParams\r\n    .subscribe(({page}) => this.getCategories(page));\r\n  }\r\n\r\n  selectCategory = (category) => {\r\n    this.nameField.nativeElement.focus();\r\n    this.category = category;\r\n    this.fillForm();\r\n  }\r\n\r\n  fillForm = () => this.categoryForm.patchValue(this.category);\r\n\r\n  emptyForm = () => {\r\n    this.category = null;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.loading = true;\r\n    if(this.categoryForm.invalid) {\r\n      return\r\n    }\r\n\r\n    if(this.category) {\r\n      this.service.update(this.categoryForm.value)\r\n      .subscribe(\r\n        (response:any) => {\r\n          M.toast({html: response?.message, classes:'succes'}); \r\n          this.getCategories();\r\n          this.emptyForm();\r\n        },\r\n        error => M.toast({html: error, classes:'fail'}),\r\n        () => this.loading = false\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.service.store(this.categoryForm.value)\r\n    .subscribe(\r\n      (data:any) => {  \r\n        M.toast({html: data?.message, classes:'succes'}); \r\n        this.getCategories()\r\n      },\r\n      error => M.toast({html: error, classes:'fail'}),\r\n      () => this.loading = false\r\n      \r\n    )\r\n  }\r\n\r\n  getCategories = (page = 1) => this.service.get(page)\r\n  .subscribe(\r\n    response => this.categoriesInfos = response,\r\n    error => M.toast({html: error, classes:'fail'})\r\n  );\r\n\r\n  deleteCategory = (category) => this.service.delete(category)\r\n    .subscribe(\r\n      data => {\r\n        M.toast({ html:'Deletado com sucesso', classes:'succes' });\r\n        this.getCategories();\r\n      },\r\n      error => M.toast({ html:'Erro ao deletar', classes:'fail' })\r\n    )\r\n\r\n  get pagination() {\r\n    return [...Array( this.categoriesInfos?.last_page ).keys()];\r\n  }\r\n\r\n}\r\n","<form class=\"col s8 card-panel\" [formGroup]=\"categoryForm\">\r\n    <div class=\"row\">\r\n        <div class=\"col s12 center-align\">\r\n            <h4>Cadastrar Categoria</h4>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"input-field col s12 m8\">\r\n            <input #name type=\"text\" placeholder=\"Nome da categoria\" formControlName=\"name\">\r\n        </div>\r\n        <div class=\"col s6 m3\">\r\n            <button class=\"btn orange darken-1\" [disabled]=\"loading\" (click)=\"onSubmit()\">{{(!category)?\"Cadastrar\":\"Editar\"}}</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col s3 push-s3\">\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<app-pagination\r\n    [arrayInfos]=\"categoriesInfos\"\r\n    moduleUrl=\"categories\"\r\n    [page]=\"categoriesInfos?.current_page\"\r\n></app-pagination>\r\n\r\n<table>\r\n    <thead>\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Editar</th>\r\n            <th>Excluir</th>\r\n        </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n        <tr *ngFor=\"let category of categoriesInfos?.data\">\r\n            <td>{{category.name}}</td>\r\n            <td>\r\n                <a class=\"orange-text clickable\" (click)=\"selectCategory(category)\">\r\n                    <i class=\"material-icons\">\r\n                        create\r\n                    </i>\r\n                </a>\r\n            </td>\r\n            <td>\r\n                <a class=\"red-text clickable\" (click)=\"deleteCategory(category)\">\r\n                    <i class=\"material-icons\">\r\n                        close\r\n                    </i>\r\n                </a>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<app-pagination\r\n    [arrayInfos]=\"categoriesInfos\"\r\n    moduleUrl=\"categories\"\r\n    [page]=\"categoriesInfos?.current_page\"\r\n></app-pagination>\r\n","import {Directive, ElementRef, Output, EventEmitter, HostListener} from '@angular/core';\r\n \r\n@Directive({\r\n    selector: '[clickOutside]'\r\n})\r\nexport class ClickOutsideDirective {\r\n    constructor(private _elementRef : ElementRef) {\r\n    }\r\n \r\n    @Output()\r\n    public clickOutside = new EventEmitter();\r\n \r\n    @HostListener('document:click', ['$event.target'])\r\n    public onClick(targetElement) {\r\n        const clickedInside = this._elementRef.nativeElement.contains(targetElement);\r\n        if (!clickedInside) {\r\n            this.clickOutside.emit(null);\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ProductsService } from '@shared/services/products.service';\r\nimport { SalesService } from '@shared/services/sales.service';\r\nimport { CategoriesService } from '@shared/services/categories.service';\r\nimport { forkJoin } from 'rxjs';\r\nimport { FeedsService } from '@shared/services/feeds.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  categoriesInfos;\r\n  productsInfos;\r\n  salesInfos;\r\n  feedsInfos;\r\n\r\n  constructor(\r\n    private categoriesService: CategoriesService,\r\n    private productsService: ProductsService,\r\n    private salesService: SalesService,\r\n    private feedsService: FeedsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    forkJoin(\r\n      this.categoriesService.get(1),\r\n      this.productsService.get(),\r\n      this.salesService.get(),\r\n      this.feedsService.get(),\r\n    ).subscribe(\r\n      infos => {\r\n        this.categoriesInfos = infos[0];\r\n        this.productsInfos = infos[1];\r\n        this.salesInfos = infos[2];\r\n        this.feedsInfos = infos[3];\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"section\">\r\n        <div class=\"col s12 m4 l4 x13\">\r\n            <div class=\"card gradient-45deg-light-blue-cyan white-text\">\r\n                <div class=\"card-content\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col s7 m7\">\r\n                            <i class=\"material-icons background-round mt-5\">add_shopping_cart</i>\r\n                            <p>Produtos</p>\r\n                        </div>\r\n                        <div class=\"col s5 m5 right-align\">\r\n                            <h5 class=\"mb-0\">{{productsInfos?.total || '-'}}</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col s12 m4 l4 x13\">\r\n            <div class=\"card gradient-45deg-green-teal white-text\">\r\n                <div class=\"card-content\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col s7 m7\">\r\n                            <i class=\"material-icons background-round mt-5\">timeline</i>\r\n                            <p>Vendas</p>\r\n                        </div>\r\n                        <div class=\"col s5 m5 right-align\">\r\n                            <h5 class=\"mb-0\">{{salesInfos?.total || '-'}}</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col s12 m4 l4 x13\">\r\n            <div class=\"card gradient-45deg-red-pink white-text\">\r\n                <div class=\"card-content\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col s7 m7\">\r\n                            <i class=\"material-icons background-round mt-5\">timeline</i>\r\n                            <p>Categorias</p>\r\n                        </div>\r\n                        <div class=\"col s5 m5 right-align\">\r\n                            <h5 class=\"mb-0\">{{categoriesInfos?.total || '-'}}</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"section\">\r\n        <div class=\"col s12\">\r\n            <ul class=\"collection\">\r\n                <li class=\"collection-header center\"><h4>Atividades</h4></li>\r\n\r\n                <li *ngFor=\"let item of feedsInfos?.data\" class=\"collection-item\">{{ item?.hour }} {{ item?.action }}</li>\r\n              </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Directive, HostListener, ElementRef, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[hover-class]'\r\n})\r\nexport class HoverClassDirective {\r\n\r\n  constructor(public elementRef:ElementRef) {\r\n    console.log(elementRef)\r\n   }\r\n  @Input('hover-class') hoverClass:any;  \r\n\r\n  @HostListener('mouseenter') onMouseEnter() {\r\n    this.elementRef.nativeElement.classList.add(this.hoverClass);\r\n }\r\n\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    this.elementRef.nativeElement.classList.remove(this.hoverClass);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProductsService } from '@shared/services/products.service';\r\nimport { Product } from '@shared/models/product';\r\nimport * as M from 'materialize-css';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\nimport { SalesService } from '@shared/services/sales.service';\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { SaleForm } from '@shared/forms/sales';\r\nimport { Pagination } from '@shared/models/pagination';\r\n\r\n@Component({\r\n  selector: 'app-inventory',\r\n  templateUrl: './inventory.component.html',\r\n  styleUrls: ['./inventory.component.scss']\r\n})\r\nexport class InventoryComponent implements OnInit {\r\n\r\n  public loading: boolean = false;\r\n  public productsInfos;\r\n  public loggedUser;\r\n  public selectedProduct: Product;\r\n  public amount: number;\r\n  public filter: string;\r\n  public filterType: string = \"title\";\r\n  public screenType: string = \"\";\r\n  public saleForm: FormGroup;\r\n  public page;\r\n  \r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private service: ProductsService,\r\n    private salesService: SalesService,\r\n    private formBuilder: FormBuilder,\r\n    private authenticationService: AuthenticationService,\r\n    public router: Router,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loggedUser = this.authenticationService.currentUserValue;\r\n    this.screenType = this.route.snapshot.data.type;\r\n    this.initializeSaleForm();\r\n    this.route.queryParams\r\n    .subscribe(\r\n      ({page}) => {\r\n          this.page = page;\r\n          (this.haveFilter()) ? this.search(`${this.service.filter}`, page): this.getProducts(page);\r\n        }, \r\n        (error) => M.toast({html:error, classes: 'fail'})\r\n      );\r\n    M.updateTextFields();\r\n    this.initializeSelect();\r\n    this.initializeModal();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.service.filter = null;\r\n  }\r\n\r\n  getProducts = (page?) => this.service.get(page)\r\n    .subscribe(\r\n      data => this.productsInfos = data,\r\n      error => M.toast({html: error, classes:'fail'})\r\n    )\r\n\r\n  selectProduct = (product) => {\r\n    this.selectedProduct = product;\r\n    this.saleForm.patchValue({ product_id: product.id });\r\n  };\r\n\r\n  get pagination() {\r\n    return [...Array(this.productsInfos?.last_page).keys()];\r\n  }\r\n\r\n  initializeModal = () => {\r\n    var elems = document.querySelectorAll('.modal');\r\n    var instances = M.Modal.init(elems, {});\r\n  }\r\n  \r\n  initializeSelect = () => {\r\n    var elems = document.querySelectorAll('select');\r\n    var instances = M.FormSelect.init(elems, {});\r\n  }\r\n\r\n  sell = () => {\r\n\r\n    this.saleForm.controls['price'].setValue((this.saleForm.value.amount * this.selectedProduct.value_sell ));\r\n\r\n    this.salesService.store(this.saleForm.value)\r\n    .subscribe(\r\n      data => {\r\n        M.toast({html: 'Baixa cadastrada', classses:'succes'});\r\n        (this.haveFilter()) ? this.search(`${this.service.filter}&page=${this.page}`): this.getProducts(this.page);\r\n\r\n      }, error => {\r\n        M.toast({ html: error?.amount, classes: 'fail'});\r\n      }\r\n    );\r\n  }\r\n\r\n  addAmount = () => this.service.update({ id: this.selectedProduct.id, amount:(this.amount+this.selectedProduct.amount) })\r\n    .subscribe(\r\n      data => {\r\n        M.toast({html: 'Adicionado com sucesso', classses:'succes'});\r\n        (this.haveFilter()) ? this.search(`${this.service.filter}&page=${this.page}`): this.getProducts(this.page);\r\n      }, error => {\r\n        M.toast({ html: error, classes: 'fail'});\r\n      }\r\n    )\r\n    \r\n  search = (filter?, page?) => {\r\n    this.service.search(\r\n      (filter??`${this.filterType}=${this.filter}`),page\r\n    ).subscribe(\r\n      (products:Pagination) => {\r\n        this.productsInfos = products;\r\n        this.changingQueryParams();\r\n      },\r\n      error => M.toast({ html: error, classes:\"fail\"})\r\n    )\r\n}\r\n  haveFilter = () => this.service.filter;\r\n\r\n  initializeSaleForm = () => {\r\n    this.saleForm = this.formBuilder.group(new SaleForm);\r\n    this.saleForm.patchValue({ user_id: this.loggedUser.id });\r\n  }\r\n\r\n    \r\n  private changingQueryParams() {\r\n    this.router.navigate([], { \r\n      queryParams: {\r\n        page: this.productsInfos?.current_page\r\n      }\r\n    });\r\n  }\r\n\r\n  delete = (product) => this.service.delete(product?.id)\r\n    .subscribe(\r\n      () => this.getProducts(),\r\n      error => M.toast({ html:error, classes:'fail' })\r\n    )\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col s12 center\">\r\n        <h3>{{ screenType === 'sell' ? \"Dar baixa em produtos\" : screenType === 'edit'  ? \"Editar estoque\" : \"Consultar estoque\"}}</h3>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col s12\">\r\n        <h4>Pesquisar</h4>\r\n    </div>\r\n    <form class=\"col s12\">\r\n        <div class=\"row\">\r\n            <div class=\"input-field col m4 s12\">\r\n                <select [(ngModel)]=\"filterType\" name=\"filterType\" id=\"filterType\" placeholder=\"Título\">\r\n                  <!-- <option value=\"\" disable selected>Título</option> -->\r\n                  <option value=\"title\" selected>Título</option>\r\n                  <option value=\"ref\">Referencia</option>\r\n                </select>                \r\n                <label for=\"filterType\">Selecione o filtro</label>\r\n              </div>\r\n            \r\n            <div class=\"input-field col m8 s12\">\r\n                <input type=\"text\" placeholder=\"Título ou Referência do produto\" [(ngModel)]=\"filter\" name=\"filter\" (keyup)=\"search()\">\r\n                <label for=\"filter\">Título ou Referência do produto</label>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n<app-pagination\r\n    [arrayInfos]=\"productsInfos\"\r\n    moduleUrl=\"inventory-{{screenType}}\"\r\n    [page]=\"productsInfos?.current_page\"\r\n></app-pagination>\r\n\r\n<table class=\"responsive-table striped\">\r\n    <thead>\r\n        <tr>\r\n            <th>Ref.</th>\r\n            <th>Nome</th>\r\n            <th>Custo</th>\r\n            <th>Valor Venda</th>\r\n            <th>Aplicação</th>\r\n            <th>Quantidade</th>\r\n            <th *ngIf=\"screenType === 'sell'\">Baixa</th>\r\n            <th *ngIf=\"screenType === 'edit'\">Editar</th>\r\n            <th *ngIf=\"screenType === 'add'\">Adicionar</th>\r\n            <th *ngIf=\"loggedUser?.role_id == 1 && screenType === 'edit'\">Excluir</th>\r\n        </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n        <tr *ngFor=\"let product of productsInfos?.data\">\r\n            <td>{{ product.ref }}</td>\r\n            <td>{{ product.title }}</td>\r\n            <td>{{ product.value_buy }}</td>\r\n            <td>{{ product.value_sell }}</td>\r\n            <td id=\"application\">{{ product.application }}</td>\r\n            <td>{{ product.amount }}</td>\r\n            <td *ngIf=\"screenType === 'sell'\">\r\n                <a class=\"green-text modal-trigger clickable\" data-target=\"sells\" (click)=\"selectProduct(product)\">\r\n                    <i class=\"material-icons\">\r\n                        shopping_cart\r\n                    </i>\r\n                </a>\r\n            </td>\r\n            <td *ngIf=\"screenType === 'edit'\">\r\n                <a class=\"orange-text\" routerLink=\"//products/{{product.id}}\">\r\n                    <i class=\"material-icons\">\r\n                        create\r\n                    </i>\r\n                </a>\r\n            </td>\r\n            <td *ngIf=\"screenType === 'add'\">\r\n                <a class=\"green-text darken-1 modal-trigger clickable add\" hover-class=\"orange-text\" data-target=\"add-amount\" (click)=\"selectProduct(product)\">\r\n                    <i class=\"material-icons\">\r\n                        add\r\n                    </i>\r\n                </a>\r\n            </td>\r\n            <td *ngIf=\"loggedUser?.role_id == 1 && screenType === 'edit'\">\r\n                <a class=\"red-text clickable\" (click)=\"delete(product)\">\r\n                    <i class=\"material-icons\">\r\n                        delete\r\n                    </i>\r\n                </a>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<app-pagination\r\n    [arrayInfos]=\"productsInfos\"\r\n    moduleUrl=\"inventory-{{screenType}}\"\r\n    [page]=\"productsInfos?.current_page\"\r\n></app-pagination>\r\n\r\n<!-- Modal Structure -->\r\n<div id=\"sells\" class=\"modal sells\">\r\n    <div class=\"modal-content\">\r\n        <h4>Dar baixa em {{ selectedProduct?.title }}</h4>\r\n        <form class=\"col s12\" [formGroup]=\"saleForm\">\r\n            <div class=\"row\">\r\n                <div class=\"input-field col s12\">\r\n                    <input type=\"number\" placeholder=\"Quantidade\" formControlName=\"amount\" name=\"amount\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <div class=\"row\">\r\n            <div class=\"col s6 m3 push-sm\">\r\n                <button class=\"modal-close btn grey lighten-2 black-text\">Fechar</button>\r\n            </div>\r\n            <div class=\"col s6 m3 push-m6\">\r\n                <button class=\"waves-effect waves-orange btn orange darken-1\" (click)=\"sell()\">Registrar</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Modal Structure -->\r\n<div id=\"add-amount\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n        <h4>Adicionar ao estoque {{ selectedProduct?.title }}</h4>\r\n        <span>Atualmente possui <strong class=\"succes\">{{ selectedProduct?.amount }} itens</strong> </span>\r\n        <form class=\"col s12\" >\r\n            <div class=\"row\">\r\n                <div class=\"input-field col s12\">\r\n                    <input type=\"number\" placeholder=\"Quantidade\" [(ngModel)]=\"amount\" name=\"amount\">\r\n                    <label for=\"amount\">Quantidade que deseja adicionar</label>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <div class=\"row\">\r\n            <div class=\"col s3 push-s3\">\r\n                <button class=\"modal-close btn grey lighten-2 black-text\">Fechar</button>\r\n            </div>\r\n            <div class=\"col s3 push-s3\">\r\n                <button class=\"waves-effect waves-orange btn orange darken-1\" (click)=\"addAmount()\">Adicionar</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, ElementRef, ChangeDetectorRef, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { LoadingService } from 'src/app/shared/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-loading',\r\n  templateUrl: './loading.component.html',\r\n  styleUrls: ['./loading.component.scss']\r\n})\r\nexport class LoadingComponent implements AfterViewInit, OnDestroy {\r\n  loadingSubscription: Subscription;\r\n  \r\n  constructor(\r\n    private loadingScreenService: LoadingService,\r\n    private _elmRef: ElementRef,\r\n    private _changeDetectorRef: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this._elmRef.nativeElement.style.display = 'none';\r\n    this.loadingSubscription = this.loadingScreenService.loading$.pipe().subscribe(\r\n      (status: boolean) => {\r\n        this._elmRef.nativeElement.style.display = status ? 'block' : 'none';\r\n        this._changeDetectorRef.detectChanges();\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.loadingSubscription.unsubscribe();\r\n  }\r\n}","  <div class=\"wrapper\">\r\n      <div class=\"preloader-wrapper big active\">\r\n        <div class=\"spinner-layer spinner-orange-only\">\r\n          <div class=\"circle-clipper left\">\r\n            <div class=\"circle\"></div>\r\n          </div><div class=\"gap-patch\">\r\n            <div class=\"circle\"></div>\r\n          </div><div class=\"circle-clipper right\">\r\n            <div class=\"circle\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { Login } from '@shared/forms/login';\r\nimport * as M from 'materialize-css';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public loginForm: FormGroup;\r\n  public recoveryForm: FormGroup;\r\n  recoveryPass = false;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  error = '';\r\n  \r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n    if(this.authenticationService.currentUserValue) {\r\n      this.router.navigate(['/']);\r\n    }\r\n   }\r\n  \r\n  ngOnInit(): void {\r\n    M.updateTextFields();\r\n    this.loginForm = this.formBuilder.group(new Login);\r\n    this.recoveryForm = this.formBuilder.group({\r\n      user : new FormControl('', Validators.required)\r\n    });\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';    \r\n  }\r\n\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if(this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.authenticationService.login(this.f.user.value, this.f.password.value)\r\n    .pipe(first())\r\n    .subscribe(\r\n      data => this.router.navigate(['/']),\r\n      error => {\r\n        M.toast({ html:\"Usuário ou senha incorretos\", classes:\"fail\"})\r\n        this.error = error;\r\n        this.loading = false;\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  recovery = () => {\r\n    this.authenticationService.createRecoveryPassord(this.recoveryForm.value)\r\n      .subscribe(\r\n        data => M.toast({ html: \"Email enviado!\"}),\r\n        error => M.toast({ html: error, classes:'fail'}),\r\n      )\r\n\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"row valign-wrapper loginBg\">\r\n    <form class=\"col s12 m8 pull-m2 login\" [formGroup]=\"loginForm\" *ngIf=\"!recoveryPass\">\r\n        <div class=\"logo\">Autopeças</div>\r\n        <div class=\"row\">\r\n            <div class=\"col s12 black-background\">\r\n                <div class=\"row\">\r\n                    <div class=\"col s12\">\r\n                        <h5 class=\"\">Entrar</h5>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"input-field col s12\">\r\n                        <input placeholder=\"Usuário\" id=\"user\" type=\"text\" class=\"validate\" formControlName=\"user\">\r\n                      </div>\r\n                      <div class=\"input-field col s12\">\r\n                        <input placeholder=\"Senha\" id=\"password\" type=\"password\" class=\"validate\" formControlName=\"password\">\r\n                      </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col s12 m4\">\r\n                        <button class=\"waves-effect waves-light btn orange darken-3 white-text\" (click)=\"onSubmit()\">\r\n                            Entrar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <br>\r\n                <span class=\"orange-text clickable\" (click)=\"recoveryPass=true\"> Esqueceu a senha?</span>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <form class=\"col s12 pull-s2 login\" [formGroup]=\"recoveryForm\" *ngIf=\"recoveryPass\">\r\n        <div class=\"row back clickable\">\r\n            <div class=\"col s12\" (click)=\"recoveryPass=false\">\r\n                <span class=\"material-icons\">\r\n                    keyboard_arrow_left\r\n                </span>\r\n                <span>Entrar</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col s8 push-s2\">\r\n                <div class=\"row\">\r\n                    <div class=\"col s12\">\r\n                        <h5 class=\"\">Recuperar senha</h5>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"input-field col s12\">\r\n                        <input placeholder=\"Usuário\" id=\"user\" type=\"text\" class=\"validate\" formControlName=\"user\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col s6\">\r\n                        <button class=\"waves-effect waves-light btn orange darken-3 white-text\" (click)=\"recovery()\">\r\n                            Entrar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NotificationsService } from '@shared/services/notifications.service';\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\nimport { UserService } from '@shared/services/user.service';\r\n\r\nimport * as M from 'materialize-css';\r\nimport { Router, Event, NavigationStart } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  notifications = { data: [{read_at:''}]};\r\n  show = false;\r\n  clickOutCounter = 0;\r\n  loggedUserName = \"\";\r\n\r\n  constructor(\r\n    private notificationsService: NotificationsService,\r\n    private authService: AuthenticationService,\r\n    private service: UserService,\r\n    private router: Router\r\n    \r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.service.find(this.authService.currentUserValue.id)\r\n    .subscribe(\r\n      data => this.loggedUserName = data.name\r\n    )\r\n    this.router.events.forEach((event) => {\r\n      const result = location?.pathname.indexOf('login') > -1 || location?.pathname.indexOf('recovery-password') > -1;\r\n      if(event instanceof NavigationStart) {\r\n        if( !result) {\r\n          this.getNotifications();\r\n        }\r\n      }\r\n      // NavigationEnd\r\n      // NavigationCancel\r\n      // NavigationError\r\n      // RoutesRecognized\r\n    });\r\n  }\r\n\r\n  showNotifications = () => this.show = true;\r\n\r\n  hideNotifications = () => {\r\n    \r\n    if( this.clickOutCounter === 0 ) {\r\n      this.sumClickOut();\r\n    } else {\r\n      this.show = false;\r\n      this.clickOutCounter = 0;\r\n    }\r\n  }\r\n\r\n  sumClickOut = () => this.clickOutCounter++;\r\n\r\n  markAllAsRead = () => {\r\n    this.notificationsService.marAsRead(this.authService.currentUserValue.id)\r\n    .subscribe(\r\n      () => this.getNotifications(),\r\n      error => M.toast({html:\"Erro ao buscar notificações\", classes:\"fail\"})\r\n\r\n    )\r\n  }\r\n\r\n  getNotifications = () => {\r\n    this.notificationsService.get(this.authService?.currentUserValue?.id)\r\n    .subscribe(\r\n      data => {\r\n        this.notifications = data;\r\n        this.show = false;\r\n      },\r\n      error => M.toast({html:\"Erro ao buscar notificações\", classes:\"fail\"})\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"navbar-fixed\">\r\n  <nav>\r\n    <div class=\"nav-wrapper\">\r\n      <a href=\"#\" data-target=\"slide-out\" class=\"sidenav-trigger\"><i class=\"material-icons\">menu</i></a>\r\n\r\n      <ul id=\"nav-mobile\" class=\"right\">\r\n        <li class=\"clickable icon-pulldown\" (click)=\"showNotifications()\">\r\n          <span class=\"material-icons\">\r\n            notifications\r\n          </span>\r\n          <span *ngIf=\"(notifications?.data[0]?.read_at == null)\" class=\"badge-point\"></span>\r\n        </li>\r\n        <li class=\"icon-pulldown user-icon\">\r\n          <span class=\"material-icons\">\r\n            account_circle\r\n          </span>\r\n        </li>\r\n        <li class=\"logged-user-name\">\r\n          <span>\r\n            {{this.loggedUserName}}\r\n          </span>\r\n        </li>\r\n        <li>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n</div>\r\n\r\n<ul class=\"notifications .dropdown-contet\" *ngIf=\"show\" (clickOutside)=\"hideNotifications()\">\r\n  <li class=\"right-align\">\r\n    <span class=\"title\">\r\n      NOTIFICAÇÕES\r\n    </span>\r\n    <span class=\"material-icons white-text mark-as-read clickable\" (click)=\"markAllAsRead()\">\r\n      playlist_add_check\r\n    </span>\r\n  </li>\r\n  <li class=\"divider\"></li>\r\n  <li *ngFor=\"let notification of notifications?.data\" [ngClass]=\"{'unread': (notification?.read_at == null)}\">\r\n    <span class=\"material-icons background-round small orange darken-3\">\r\n      trending_down\r\n    </span>\r\n    {{notification?.data?.name}} ({{notification?.data?.title}})\r\n  </li>\r\n</ul>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ProductForm } from '@shared/forms/products';\r\nimport { ProductsService } from '@shared/services/products.service';\r\nimport { CategoriesService } from '@shared/services/categories.service';\r\nimport * as M from 'materialize-css';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.scss']\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n\r\n  public productForm: FormGroup;\r\n  public categories;\r\n  public autocomplete;\r\n  public aa;\r\n  public selectedCategory;\r\n  public loading: boolean = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private service: ProductsService,\r\n    private categoriesService: CategoriesService,\r\n    private route: ActivatedRoute\r\n  ) {\r\n\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    M.updateTextFields();\r\n\r\n    this.productForm = this.formBuilder.group(new ProductForm);\r\n    this.getCategories();\r\n    if(this.route.snapshot.paramMap.get('id')) {\r\n      this.service.find(this.route.snapshot.paramMap.get('id'))\r\n        .subscribe(\r\n          (product) => {\r\n            this.productForm.patchValue(product);\r\n            M.updateTextFields();            \r\n            M.textareaAutoResize(document.querySelector('.materialize-textarea'));\r\n          },\r\n          error => M.toast({ html: error, classes:'fail'})\r\n        );\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.loading = true;\r\n    if(this.productForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    if(this.productForm.value.id) {\r\n      this.service.update(this.productForm.value)\r\n      .subscribe(\r\n        () => M.toast({html: \"Atualizado com sucesso\", classes:'succes'}),\r\n        error => M.toast({html: error, classes:'fail'}),\r\n        () => this.loading = false\r\n      )\r\n    } else {\r\n    this.service.store(this.productForm.value)\r\n      .subscribe(\r\n        () => {\r\n          M.toast({html: \"Cadastrado com sucesso\", classes:'succes'});\r\n          this.productForm.reset();\r\n        },\r\n        error => {\r\n          this.handleError(error);\r\n          this.loading = false;\r\n        },\r\n        () => this.loading = false\r\n      )\r\n    }\r\n  }\r\n\r\n  getCategories = () => this.categoriesService.get()\r\n  .subscribe(\r\n    (categories:any) =>  this.categories = categories,\r\n    error => M.toast({html: error, classes:'fail'})\r\n    );\r\n\r\n  handleError = (e) => {\r\n      const formFields = Object.keys(this.productForm.value);\r\n      const errorsFields = Object.keys(e);\r\n      let fields:any = formFields.filter(value => errorsFields.includes(value));\r\n      fields.map(f => this.productForm.controls[f].setErrors({'unavailable': true}))\r\n  }\r\n\r\n  clean = () => this.productForm.reset();\r\n  get formControls() { return this.productForm.controls; }\r\n\r\n}\r\n","<form\r\n  class=\"col s8 card-panel\"\r\n  [formGroup]=\"productForm\"\r\n  autocomplete=\"off\"\r\n  autocomplete=\"false\"\r\n>\r\n  <div class=\"row\">\r\n    <div class=\"col s12 center-align\">\r\n      <h4>{{this.productForm?.value?.id ? \"Editar\" : \"Cadastrar\"}} Produtos</h4>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">    \r\n    <div class=\"input-field col m4 s6\">\r\n      <input type=\"text\" placeholder=\"Nome da peça\" formControlName=\"title\" />\r\n      <label for=\"title\">Título</label>\r\n      \r\n    </div>\r\n    <div class=\"input-field col m4 s6\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Referência\"\r\n        formControlName=\"ref\"\r\n        name=\"ref\"\r\n        [ngClass]=\"{\r\n          'validate invalid': formControls?.ref?.errors?.unavailable\r\n        }\"\r\n      />\r\n      <label for=\"ref\">Referência</label>\r\n      <span\r\n        *ngIf=\"formControls?.ref?.errors?.unavailable\"\r\n        data-error=\"Referência já cadastrada\"\r\n        data-succes=\"right\"\r\n        class=\"helper-text\"\r\n      ></span>\r\n    </div>\r\n    <div class=\"input-field col m2 s6\">\r\n      <input type=\"number\" placeholder=\"Quantidade\" formControlName=\"amount\" name=\"amount\"/>\r\n      <label for=\"amount\">Quantidade</label>\r\n    </div>\r\n    <div class=\"input-field col m2 s6\">\r\n      <input type=\"number\" placeholder=\"Notificar abaixo de\" value=\"1\" formControlName=\"limit_amount\" name=\"limit_amount\"/>\r\n      <label for=\"limit_amount\">Estoque Mínimo</label>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"input-field col m4 s6\">\r\n      <label for=\"value_cost\">Valor de custo</label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Valor de custo\"\r\n        formControlName=\"value_cost\"\r\n        name=\"value_cost\"\r\n        currencyMask\r\n        [options]=\"{\r\n          prefix: 'R$ ',\r\n          thousands: '.',\r\n          decimal: ',',\r\n          align: 'left'\r\n        }\"\r\n      />\r\n    </div>\r\n    <div class=\"input-field col m4 s6\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Valor de venda\"\r\n        formControlName=\"value_sell\"\r\n        name=\"value_sell\"\r\n        currencyMask\r\n        [options]=\"{\r\n          prefix: 'R$ ',\r\n          thousands: '.',\r\n          decimal: ',',\r\n          align: 'left'\r\n        }\"\r\n      />\r\n      <label for=\"value_sell\">Valor de venda</label>\r\n\r\n    </div>\r\n    <div class=\"col m4 s12\">\r\n      <div class=\"row\">\r\n        <div class=\"input-field col s12\">\r\n          <ng-select\r\n            [items]=\"categories\"\r\n            bindLabel=\"name\"\r\n            bindValue=\"id\"\r\n            placeholder=\"Categorias\"\r\n            formControlName=\"category_id\"\r\n          ></ng-select>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"input-field col s12\">\r\n      <textarea\r\n        id=\"textarea1\"\r\n        class=\"materialize-textarea\"\r\n        formControlName=\"application\"\r\n      ></textarea>\r\n      <label for=\"textarea1\">Aplicação</label>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row center-align\">\r\n    <div class=\"col m3 s6\">\r\n      <button\r\n        class=\"btn orange darken-1\"\r\n        (click)=\"onSubmit()\"\r\n        [disabled]=\"productForm?.invalid || loading\"\r\n      >\r\n        {{this.productForm?.value?.id ? \"Salvar\" : \"Cadastrar\"}}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Recovery } from '@shared/forms/recovery';\r\nimport * as M from 'materialize-css';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-recovery-password',\r\n  templateUrl: './recovery-password.component.html',\r\n  styleUrls: ['./recovery-password.component.scss']\r\n})\r\nexport class RecoveryPasswordComponent implements OnInit {\r\n  public recoveryForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private service: AuthenticationService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    M.updateTextFields();\r\n    this.recoveryForm = this.formBuilder.group(new Recovery);\r\n    this.route.queryParams.subscribe(({token}) => {\r\n      this.service.findToken(token)\r\n        .subscribe(\r\n          data => this.recoveryForm.patchValue(data),\r\n          error => M.toast({html:error, classes:'fail'})\r\n        );\r\n\r\n    })\r\n    \r\n  }\r\n\r\n  onSubmit() {\r\n    this.service.recoveryPassword(this.recoveryForm.value)\r\n      .subscribe(\r\n        data => M.toast({html:'Senha alterada com sucesso'}),\r\n        error => M.toast({html: error, classes:'fail'})\r\n      )\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"row valign-wrapper\">\r\n    <form class=\"col s12 pull-s2 login\" [formGroup]=\"recoveryForm\">\r\n        <div class=\"row\">\r\n            <div class=\"col s8 push-s2\">\r\n                <div class=\"row\">\r\n                    <div class=\"col s12\">\r\n                        <h5 class=\"\">Recuperar senha</h5>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"input-field col s12\">\r\n                        <input placeholder=\"Senha\" id=\"password\" type=\"text\" class=\"validate\" formControlName=\"password\">\r\n                      </div>\r\n                      <div class=\"input-field col s12\">\r\n                        <input placeholder=\"Nova senha\" id=\"password_confirmation\" type=\"text\" class=\"validate\" formControlName=\"password_confirmation\">\r\n                      </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col s12\">\r\n                        <button class=\"waves-effect waves-light btn orange darken-3 white-text\" (click)=\"onSubmit()\">\r\n                            Recuperar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport { ReportsService } from '@shared/services/reports.service';\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\nimport { ReportObsoleteProduct } from '@shared/forms/reportObsoleteProduct';\r\nimport { environment } from \"@environment/environment\"\r\n\r\nimport * as M from 'materialize-css';\r\nimport { Product } from '@shared/models/product';\r\n@Component({\r\n  selector: 'app-reports',\r\n  templateUrl: './reports.component.html',\r\n  styleUrls: ['./reports.component.scss']\r\n})\r\nexport class ReportsComponent implements OnInit {\r\n\r\n  reportObsoleteForm: FormGroup;\r\n  reportInventoryDown:Product[];\r\n  data;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private service: ReportsService,\r\n    private authService: AuthenticationService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    M.Tabs.init(document.querySelectorAll('.tabs'), {swipeable:true});\r\n    M.updateTextFields();\r\n    this.reportObsoleteForm = this.formBuilder.group(new ReportObsoleteProduct(this.authService?.currentUserValue?.id));\r\n    this.getInventoryDownProducts();\r\n  }\r\n\r\n  onSubmit() {  \r\n    this.service.obsoleteProducts(this.reportObsoleteForm?.value)\r\n      .subscribe(\r\n        data => this.data = data,\r\n        error => M.toast({ html:error, classes:'error' })\r\n      )\r\n  }\r\n\r\n  getInventoryDownProducts = () => {\r\n    this.service.inventoryDownProducts()\r\n      .subscribe(\r\n        data => this.reportInventoryDown = data,\r\n        error => M.toast({ html: 'Erro ao buscar os produtos', classes: 'fail'})\r\n      )\r\n  }\r\n\r\n  getPdfInventoryDown = () => {\r\n    window.open(environment.getInventoryDownUrl, \"_blank\");\r\n  }\r\n  \r\n  downloadPdfInventoryDown = () => {\r\n    window.open(environment.downloadInventoryDownUrl, \"_blank\");\r\n  }\r\n}\r\n","\r\n<div class=\"row\">\r\n    <div class=\"col s12\">\r\n        <ul id=\"tabs-swipe-demo\" class=\"tabs\">\r\n            <li class=\"tab col s3\"><a class=\"active\" href=\"#obsolete-products\">Produtos Obsoletos</a></li>\r\n            <li class=\"tab col s3\"><a href=\"#inventory-down-products\">Produtos baixo estoque</a></li>\r\n        </ul>\r\n        <div id=\"obsolete-products\" style=\"height: 40em;\">\r\n            <div class=\"row\">\r\n                <form class=\"col s12 m3\" [formGroup]='reportObsoleteForm'>\r\n                    <div class=\"row\">\r\n                        <div style=\"margin: 20px 0 20px 0;\" class=\"col s12 center-align\">\r\n                            <b>Relatório de produtos obsoletos</b>\r\n                        </div>\r\n                        <div class=\"input-field col s12\">\r\n                            <input type=\"date\" placeholder=\"Desde\" formControlName=\"since\" name=\"since\"/>\r\n                            <label for=\"since\">Desde</label>\r\n                        </div>\r\n                        <div class=\"input-field col s12\">\r\n                            <input type=\"date\" placeholder=\"Desde\" formControlName=\"at\" name=\"at\"/>\r\n                            <label for=\"at\">Até</label>\r\n                        </div>\r\n                        <div class=\"input-field col s12\">\r\n                            <input type=\"text\" placeholder=\"Mínimo de venda\"  formControlName=\"minimun_amount\" name=\"limit_amount\"/>\r\n                            <label for=\"minimun_amount\">Mínimo de venda</label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col s12 m9\">\r\n                            <button\r\n                                class=\"btn orange darken-1\"\r\n                                (click)=\"onSubmit()\"\r\n                            >\r\n                                Cadastrar\r\n                            </button>\r\n                            </div>\r\n                    </div>\r\n                </form>\r\n                <div class=\"col s12 m8 list\">\r\n\r\n                    <table class=\"striped responsive-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nome</th>\r\n                                <th>Quantidade Total</th>\r\n                                <th>Valor Total</th>\r\n                            </tr>\r\n                        </thead>\r\n                    \r\n                        <tbody>\r\n                            <tr *ngFor=\"let product of data?.data\">\r\n                                <td>{{ product?.name }}</td>\r\n                                <td>{{ product?.amount_total }}</td>\r\n                                <td>{{ product?.value }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div id=\"inventory-down-products\" style=\"padding:5%\">\r\n            <div class=\"row\">\r\n                <div class=\"col s3\">\r\n                    <a class=\"btn green darken-1\" (click)=\"downloadPdfInventoryDown()\"><i class=\"material-icons left\">get_app</i>Baixar</a>\r\n                </div>\r\n                <div class=\"col s3\">\r\n                    <a class=\"btn orange darken-1\" (click)=\"getPdfInventoryDown()\"><i class=\"material-icons left\">visibility</i>Visualizar</a>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col s12 list\">\r\n                    <table class=\"striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Produto</th>\r\n                                <th>Quantidade mínima</th>\r\n                                <th>Quantidade Total</th>\r\n                            </tr>\r\n                        </thead>\r\n                    \r\n                        <tbody>\r\n                            <tr *ngFor=\"let product of reportInventoryDown\">\r\n                                <td>{{ product?.title }} <br> {{ product?.ref}}</td>\r\n                                <td>{{ product?.limit_amount }}</td>\r\n                                <td>{{ product?.amount }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { SalesService } from '@shared/services/sales.service';\r\nimport * as M from 'materialize-css';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Pagination } from '@shared/models/pagination';\r\nimport { PaginationHelper } from '@shared/helpers/pagination';\r\n@Component({\r\n  selector: 'app-sales',\r\n  templateUrl: './sales.component.html',\r\n  styleUrls: ['./sales.component.scss']\r\n})\r\nexport class SalesComponent implements OnInit {\r\n\r\n  salesInfos:Pagination;\r\n  page;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private service: SalesService,\r\n    private paginationHelper: PaginationHelper\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getSales();\r\n    this.route.queryParams\r\n      .subscribe(\r\n        ({page}) => this.getSales(page),\r\n        error => M.toast({ html:error, classes:'fail' })\r\n      )\r\n\r\n  }\r\n\r\n  getSales = (page?) => {\r\n    this.page = page;\r\n    this.service.get(page)\r\n    .subscribe(\r\n      data => this.salesInfos = data,\r\n      error => M.toast({ html:error, classes:'fail' })\r\n    );\r\n\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col s12 center\">\r\n        <h3>Baixas</h3>\r\n    </div>\r\n</div>\r\n\r\n<app-pagination\r\n    [arrayInfos]=\"salesInfos\"\r\n    [moduleUrl]=\"'sales'\"\r\n    [page]=\"page\"\r\n></app-pagination>\r\n\r\n<table class=\"striped responsive-table\">\r\n    <thead>\r\n        <tr>\r\n            <th>Ref.</th>\r\n            <th>Nome</th>\r\n            <th>Aplicação</th>\r\n            <th>Quantidade</th>\r\n            <th>Data</th>\r\n        </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n        <tr *ngFor=\"let sale of salesInfos?.data\">\r\n            <td>{{ sale?.product?.ref }}</td>\r\n            <td>{{ sale?.product?.title }}</td>\r\n            <td>{{ sale?.product?.application }}</td>\r\n            <td>{{ sale?.amount }}</td>\r\n            <td>{{ sale?.date }}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Pagination } from '@shared/models/pagination';\r\nimport { PaginationHelper } from '@shared/helpers/pagination';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  styleUrls: ['./pagination.component.scss']\r\n})\r\nexport class PaginationComponent implements OnInit {\r\n  @Input() arrayInfos: Pagination;\r\n  @Input() moduleUrl: string;\r\n  @Input() page: number;\r\n  @Input() filter: string;\r\n\r\n  constructor(\r\n    private paginationHelper: PaginationHelper,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if(!this.page) {\r\n      this.page = 1;\r\n    }\r\n  }\r\n\r\n      \r\n  get pagination() {\r\n    const paginationNumbers = [...Array(this.arrayInfos?.last_page).keys()];\r\n    const actual = this.paginationHelper.getActual(paginationNumbers, this.page);\r\n    const pagination = this.paginationHelper.getPagination(paginationNumbers, actual);\r\n    return (pagination != -1) ? pagination : [];\r\n  }\r\n\r\n  goTo = (page = 1) =>  {\r\n    this.router.navigate([this.moduleUrl], { queryParams: { page: page } });\r\n  }\r\n}\r\n","<ul class=\"pagination\">\r\n    <li \r\n    class=\"clickable\"\r\n    [ngClass]=\"{'disabled' : (arrayInfos?.current_page === 1)}\"\r\n    (click)=\"goTo(arrayInfos?.current_page - 1)\">\r\n        <i class=\"material-icons\">chevron_left</i>\r\n    </li>\r\n    <li \r\n    *ngFor=\"let page of pagination\" \r\n    class=\"waves-effect\" \r\n    [ngClass]=\"{'active' : (page === arrayInfos?.current_page)}\" \r\n    (click)=\"goTo(page)\">\r\n        <a>{{ page }} </a>\r\n    </li>\r\n    <li \r\n    class=\"clickable\"\r\n    [ngClass]=\"{'disabled' : (arrayInfos?.current_page === arrayInfos?.last_page)}\" \r\n    (click)=\"goTo(arrayInfos?.current_page + 1)\">\r\n        <i class=\"material-icons\">chevron_right</i>\r\n    </li>\r\n    <li \r\n    class=\"clickable\"\r\n    [ngClass]=\"{'disabled' : (arrayInfos?.current_page === arrayInfos?.last_page)}\" \r\n    (click)=\"goTo(arrayInfos?.last_page)\">\r\n        <i class=\"material-icons\">last_page\r\n        </i>\r\n    </li>\r\n</ul>\r\n","import { FormControl, Validators } from '@angular/forms';\r\n\r\nexport class CategoryForm {\r\n    id = new FormControl();    \r\n    name = new FormControl('', Validators.required);    \r\n}","import { FormControl, Validators } from '@angular/forms';\r\n\r\nexport class Login {\r\n\r\n    user = new FormControl('', Validators.required);\r\n    password = new FormControl('', Validators.required);\r\n}","import { FormControl, Validators } from '@angular/forms';\r\n\r\nexport class ProductForm {\r\n\r\n    id = new FormControl(null);\r\n    title = new FormControl('', Validators.required);\r\n    ref = new FormControl('', Validators.required);\r\n    category_id = new FormControl(null, Validators.required);\r\n    application = new FormControl('', Validators.required);\r\n    value_cost = new FormControl('', Validators.required);\r\n    value_sell = new FormControl('', Validators.required);\r\n    amount = new FormControl('', Validators.required);    \r\n    limit_amount = new FormControl('', Validators.required);    \r\n}","import { FormControl, Validators } from '@angular/forms';\r\n\r\nexport class Recovery {\r\n\r\n    email = new FormControl('', Validators.required);\r\n    password = new FormControl('', Validators.required);\r\n    password_confirmation = new FormControl('', Validators.required);\r\n    token = new FormControl('', Validators.required);\r\n\r\n}","import { FormControl, Validators } from '@angular/forms';\r\n\r\nexport class ReportObsoleteProduct {\r\n    constructor(private authUserId?) {\r\n    }\r\n    id? = new FormControl(null);\r\n    user_id = new FormControl(this.authUserId ??null, Validators.required);\r\n    since = new FormControl(null, Validators.required);\r\n    at = new FormControl(null,Validators.required);\r\n    data = new FormControl(null,Validators.required);\r\n    minimun_amount = new FormControl(null,Validators.required);\r\n}","import { FormControl, Validators } from '@angular/forms';\r\n\r\nexport class SaleForm {\r\n    id? = new FormControl(null);\r\n    user_id = new FormControl(null, Validators.required);\r\n    product_id = new FormControl(null, Validators.required);\r\n    amount = new FormControl(0, Validators.required);    \r\n    price = new FormControl(0.0, Validators.required);    \r\n}","import { FormControl, Validators } from '@angular/forms';\r\n\r\nexport class UserForm {\r\n    id? = new FormControl(null);\r\n    role_id = new FormControl(null, Validators.required);\r\n    cpf = new FormControl(null, Validators.required);\r\n    email = new FormControl(null,Validators.required);\r\n    password = new FormControl(null,Validators.required);\r\n    name = new FormControl(null,Validators.required);\r\n    user = new FormControl(null,Validators.required);\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request)\r\n        .pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                this.authenticationService.logout();\r\n                // const result = request?.url?.indexOf('login') > -1;\r\n                // if(!result) {\r\n                    location.reload(true);\r\n                // }\r\n            }\r\n\r\n            const error = err.error.errors|| err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser && currentUser.access_token) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${currentUser.access_token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { LoadingService } from '@shared/services/loading.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class LoadingInterceptorService {\r\n\r\n    activeRequests = 0;\r\n\r\n    constructor(\r\n        private loadingScreenService: LoadingService\r\n    ) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        if (this.activeRequests === 0) {\r\n            this.loadingScreenService.startLoading();\r\n        }\r\n\r\n        this.activeRequests++;\r\n\r\n        return next.handle(request).pipe(\r\n            finalize(() => {\r\n                this.activeRequests--;\r\n                if (this.activeRequests === 0) {\r\n                    this.loadingScreenService.stopLoading();\r\n                }\r\n            })\r\n        )\r\n    }\r\n}","import { Sale } from '@shared/models/sale';\r\nimport { Product } from '@shared/models/product';\r\nimport { User } from '@shared/models/user';\r\nimport { Category } from '@shared/models/category';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class PaginationHelper {\r\n\r\n    /**\r\n     * arrayOfPages - array with all pages numbers\r\n     * actual - actual page of screen\r\n     * \r\n     * return a range of 5 pagination\r\n     */\r\n    getPagination = (arrayOfPages,actual) => {\r\n        let pages = [];\r\n\r\n        if(actual != 1 && actual != -1) {\r\n            pages.push(actual-1);\r\n        }\r\n        \r\n        if(!actual) {\r\n            return -1;\r\n        }\r\n\r\n        for (let i = actual; i <= this.getLimiter(arrayOfPages, actual); i++)\r\n            pages.push(i);\r\n\r\n        return pages;\r\n    }\r\n\r\n    /**\r\n     * array - array with all pages numbers\r\n     * page - GET url parameters page\r\n     * \r\n     * return false if page is invalid \r\n     */\r\n    getActual = (array, page:number) => \r\n        (array.findIndex(index => (index+1) == page) + 1) || false;\r\n\r\n    /**\r\n     * array - array with all pages numbers\r\n     * actual - actual page of screen\r\n     * \r\n     * return the range limit to pagination\r\n     */\r\n    getLimiter = (array: number[], actual: number) => {\r\n        if (array.length > 3 && ((actual + 3) < array.length) && actual != 1) {\r\n            return actual + 3;\r\n        } else if(array.length > 4 && ((actual + 4) < array.length) && actual == 1) {\r\n            return actual + 4\r\n        } else {\r\n          return array.length;\r\n        }\r\n      }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '@environment/environment';\r\nimport { User } from '@shared/models/user';\r\nimport { headers } from '@shared/helpers/headers';\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class AuthenticationService {\r\n    private currentUserSubject: BehaviorSubject<User>;\r\n    public currentUser: Observable<User>;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n    }\r\n\r\n    public get currentUserValue(): User {\r\n        return this.currentUserSubject.value;\r\n    }\r\n\r\n    login = (user: string, password: string) => {\r\n        return this.http.post<any>(`${environment.apiUrl}/auth/login`, { user, password })\r\n            .pipe(map(user => {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('currentUser', JSON.stringify(user));\r\n                this.currentUserSubject.next(user);\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logout = () => {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('currentUser');\r\n        this.currentUserSubject.next(null);\r\n        return this.http.get<any>(`${environment.apiUrl}/auth/logout`);\r\n    }\r\n\r\n    findToken = (token) =>  this.http.get(`${environment.apiUrl}/password/find/${token}`);\r\n\r\n    createRecoveryPassord = (recoveryForm) => this.http.post(`${environment.apiUrl}/password/create`, recoveryForm)\r\n\r\n    recoveryPassword = (recoveryForm) => this.http.post(`${environment.apiUrl}/password/reset`, recoveryForm);\r\n\r\n    isLogged = () => {\r\n        return (this.currentUserValue);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Category } from '@shared/models/category';\r\n\r\nimport { environment } from '@environment/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoriesService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  /**\r\n   * Return all categories\r\n   */\r\n  get = (page = -1):Observable<Category[]> => {\r\n    return this.http.get<Category[]>(`${environment.apiUrl}/categories?page=${page}`);\r\n  }\r\n\r\n  /**\r\n   * Return an category\r\n   */\r\n  find = (id):Observable<Category> => {\r\n    return this.http.get<Category>(`${environment.apiUrl}/categories/${id}`);\r\n  }\r\n\r\n  /**\r\n   * Store an category\r\n   */\r\n  store = (category) => {\r\n    return this.http.post(`${environment.apiUrl}/categories`, category);\r\n  }\r\n\r\n  /**\r\n   * Update an category\r\n   */\r\n  update = (category) => {\r\n    return this.http.put(`${environment.apiUrl}/categories/${category.id}`, category);\r\n  }\r\n\r\n  /**\r\n   * Delete an category\r\n   */\r\n  delete = (category) => {\r\n    return this.http.delete(`${environment.apiUrl}/categories/${category.id}`);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from \"@environment/environment\"\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FeedsService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  /**\r\n   * Return all products\r\n   */\r\n  get = (page = -1):Observable<any> => this.http.get(`${environment.apiUrl}/feeds`);\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoadingService {\r\n\r\n  loading$: Subject<boolean> = new Subject();\r\n\r\n  constructor() { }\r\n\r\n  startLoading = () => this.loading$.next(true)\r\n\r\n  stopLoading = () => this.loading$.next(false)\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '@environment/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationsService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  /**\r\n   * Return all products\r\n   */\r\n  get = (user):Observable<any> => this.http.get(`${environment.apiUrl}/users/${user}/notifications`);\r\n  marAsRead = (user):Observable<any> => this.http.post(`${environment.apiUrl}/users/${user}/notifications/mark-as-read`, {});\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from \"@environment/environment\"\r\nimport { Product } from '@shared/models/product';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n\r\n  public filter: string = null;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  /**\r\n   * Return all products\r\n   */\r\n  get = (page = -1):Observable<Product[]> => this.http.get<Product[]>(`${environment.apiUrl}/products?page=${page}`);\r\n\r\n  /**\r\n   * Return an product\r\n   */\r\n  find = (id):Observable<Product> => this.http.get<Product>(`${environment.apiUrl}/products/${id}`);\r\n\r\n  /**\r\n   * Store an product\r\n   */\r\n  store = (product) =>  this.http.post(`${environment.apiUrl}/products`, product);\r\n  \r\n  /**\r\n   * Update an product\r\n   */\r\n  update = (product) => this.http.put(`${environment.apiUrl}/products/${product.id}`, product);\r\n\r\n  delete = (product) => this.http.delete(`${environment.apiUrl}/products/${product}`);\r\n\r\n  /**\r\n   * Search products\r\n   */\r\n  search = (filter, page?) => {\r\n    this.filter = filter;\r\n    return this.http.get(`${environment.apiUrl}/products/search?${filter}&page=${(page)?page:1}`);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from \"@environment/environment\"\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReportsService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  \r\n  /**\r\n   * Store a reports\r\n   */\r\n  obsoleteProducts = (report):Observable<any> => this.http.post(`${environment.apiUrl}/reports/obsolete-products`, report);\r\n\r\n  inventoryDownProducts = ():Observable<any> => this.http.get(`${environment.apiUrl}/reports/inventory-down-products`);\r\n  downloadInventoryDownProducts = ():Observable<any> => this.http.get(`${environment.downloadInventoryDownUrl}`);\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '@environment/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RolesService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll() {\r\n    return this.http.get(`${environment.apiUrl}/roles`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Sale } from '@shared/models/sale';\r\nimport { environment } from '@environment/environment';\r\nimport { Pagination } from '@shared/models/pagination';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SalesService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  /**\r\n   * Return all sales\r\n   */\r\n  get = (page = -1):Observable<Pagination> => {\r\n    return this.http.get<Pagination>(`${environment.apiUrl}/sales?page=${page}`);\r\n  }\r\n\r\n  /**\r\n   * Return an sale\r\n   */\r\n  find = (id):Observable<Sale> => {\r\n    return this.http.get<Sale>(`${environment.apiUrl}/sales/${id}`);\r\n  }\r\n\r\n  /**\r\n   * Store an sale\r\n   */\r\n  store = (sale: Sale) => {\r\n    return this.http.post(`${environment.apiUrl}/sales`, sale);\r\n  }\r\n  /**\r\n   * Update an sale\r\n   */\r\n  update = (sale) => {\r\n    return this.http.put(`${environment.apiUrl}/sales/${sale.id}`, sale);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from \"@environment/environment\"\r\nimport { User } from '@shared/models/user';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll = () => this.http.get<User[]>(`${environment.apiUrl}/users`);\r\n\r\n    /**\r\n     * Store an user\r\n     */\r\n    store = (user: User) => this.http.post(`${environment.apiUrl}/users`, user);\r\n\r\n    /**\r\n     * Update an user\r\n     */\r\n    update = (user: User) => this.http.put(`${environment.apiUrl}/users/${user?.id}`, user);\r\n\r\n    /**\r\n     * Find an user\r\n     */\r\n    find = (user) =>  this.http.get<User>(`${environment.apiUrl}/users/${user}`);\r\n\r\n    delete = (user) => this.http.delete(`${environment.apiUrl}/users/${user}`)\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\nimport * as M from 'materialize-css';\r\n@Component({\r\n  selector: 'app-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.scss']\r\n})\r\nexport class SidenavComponent implements OnInit {\r\n\r\n  user;\r\n\r\n  constructor(\r\n    private authService: AuthenticationService\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.user = this.authService.currentUserValue;    \r\n    M.Collapsible.init(document.querySelectorAll('.collapsible'), {\r\n      accordion: true\r\n    });\r\n\r\n    M.Sidenav.init(document.querySelectorAll('.sidenav'), {});\r\n\r\n  }\r\n\r\n  logout = () =>{\r\n    this.authService.logout()\r\n      .subscribe(\r\n        () => location.reload(true),\r\n        error => M.toast({html: error, classes: 'fail'})\r\n      );\r\n  }\r\n}\r\n","<ul id=\"slide-out\" class=\"sidenav sidenav-fixed\">\r\n  <li>\r\n    <a routerLink=\"/home\">\r\n      <i class=\"material-icons\">local_car_wash</i>\r\n      JF Peças Automotivas\r\n    </a>\r\n  </li>\r\n  <li><div class=\"divider\"></div></li>\r\n\r\n  <li class=\"no-padding\">\r\n    <ul\r\n      class=\"collapsible collapsible-accordion\"\r\n      data-collapsible=\"expandable\"\r\n      materialize=\"collapsible\"\r\n    >\r\n      <li>\r\n        <a class=\"collapsible-header\"\r\n          ><span class=\"material-icons icon\">arrow_drop_down</span\r\n          ><span>Cadastrar Produto</span></a\r\n        >\r\n        <div class=\"collapsible-body\">\r\n          <ul>\r\n            <li>\r\n              <a routerLink=\"/products\"\r\n                ><i class=\"material-icons\">add</i><span>Novo</span>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a routerLink=\"/inventory-add\"\r\n                ><i class=\"material-icons\">arrow_upward</i\r\n                ><span>Acrescentar ao estoque</span></a\r\n              >\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </li>\r\n\r\n  <li class=\"no-padding\">\r\n    <ul\r\n      class=\"collapsible collapsible-accordion\"\r\n      data-collapsible=\"expandable\"\r\n      materialize=\"collapsible\"\r\n    >\r\n      <li>\r\n        <a class=\"collapsible-header\"\r\n          ><span class=\"material-icons icon\">arrow_drop_down</span\r\n          ><span>Usuários</span></a\r\n        >\r\n        <div class=\"collapsible-body\">\r\n          <ul>\r\n            <li *ngIf=\"user?.role_id == 1\">\r\n              <a routerLink=\"/users-form\"\r\n                ><i class=\"material-icons\">add</i\r\n                ><span>Cadastrar Usuários</span></a\r\n              >\r\n            </li>\r\n            <li>\r\n              <a routerLink=\"/users\"\r\n                ><i class=\"material-icons\">people</i\r\n                ><span>Listas Usuários</span></a\r\n              >\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </li>\r\n\r\n  <li class=\"no-padding\">\r\n    <ul\r\n      class=\"collapsible collapsible-accordion\"\r\n      data-collapsible=\"expandable\"\r\n      materialize=\"collapsible\"\r\n    >\r\n      <li>\r\n        <a class=\"collapsible-header\"\r\n          ><span class=\"material-icons icon\">arrow_drop_down</span\r\n          ><span>Estoque</span></a\r\n        >\r\n        <div class=\"collapsible-body\">\r\n          <ul>\r\n            <li>\r\n              <a routerLink=\"/inventory-list\"\r\n                ><i class=\"material-icons\">list</i><span>Consultar</span></a\r\n              >\r\n            </li>\r\n            <li>\r\n              <a routerLink=\"/inventory-edit\"\r\n                ><i class=\"material-icons\">edit</i><span>Editar</span></a\r\n              >\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </li>\r\n\r\n  <li>\r\n    <a routerLink=\"/inventory-sell\"\r\n      ><i class=\"material-icons\">shopping_cart</i><span>Dar Baixa</span></a\r\n    >\r\n  </li>\r\n  <li>\r\n    <a routerLink=\"/sales\"\r\n      ><i class=\"material-icons\">assessment</i><span>Listar Baixas</span></a\r\n    >\r\n  </li>\r\n  <li>\r\n    <a routerLink=\"/categories\"\r\n      ><i class=\"material-icons\">bookmarks</i><span>Categorias</span></a\r\n    >\r\n  </li>\r\n  <li>\r\n    <a routerLink=\"/reports\"\r\n      ><i class=\"material-icons\">bar_chart</i><span>Gerar Relatórios</span></a\r\n    >\r\n  </li>\r\n  <li>\r\n    <a *ngIf=\"user\" [routerLink]=\"['users', user?.id]\"\r\n      ><i class=\"material-icons\">account_box</i><span>Editar Perfil</span></a\r\n    >\r\n  </li>\r\n  <li (click)=\"logout()\">\r\n    <a class=\"clickable\"\r\n      ><i class=\"material-icons\">cancel_presentation</i><span>Sair</span></a\r\n    >\r\n  </li>\r\n</ul>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport * as M from 'materialize-css';\r\nimport { UserForm } from '@shared/forms/users';\r\nimport { RolesService } from '@shared/services/roles.service';\r\nimport { UserService } from '@shared/services/user.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-users-form',\r\n  templateUrl: './users-form.component.html',\r\n  styleUrls: ['./users-form.component.scss']\r\n})\r\nexport class UsersFormComponent implements OnInit {\r\n  userForm: FormGroup;\r\n  roles;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private roleService: RolesService,\r\n    private service: UserService,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    M.updateTextFields();\r\n    this.getAllRoles();\r\n    this.userForm = this.formBuilder.group(new UserForm);\r\n\r\n    if(this.route.snapshot.paramMap.get('id')) {\r\n      this.service.find(this.route.snapshot.paramMap.get('id'))\r\n        .subscribe(\r\n          data => {\r\n            this.userForm.patchValue(data);\r\n            M.updateTextFields();  \r\n          },\r\n          error => M.toast({ html:error, classes:'fail' })\r\n        )\r\n    }\r\n    M.updateTextFields();\r\n  }\r\n\r\n  getAllRoles = () => {\r\n    this.roleService.getAll()\r\n      .subscribe(\r\n        data => this.roles = data,\r\n        error => M.toast({html:error, classes:'fail'})\r\n      )\r\n  }\r\n\r\n  onSubmit() {\r\n    if(this.userForm?.value?.id) {\r\n      this.service.update(this.userForm?.value)\r\n        .subscribe(\r\n          data => M.toast({ html:'Atualizado com suceso', classes:'succes' }),\r\n          error => M.toast({ html: error, classes:'fail' })\r\n        )\r\n    } else {\r\n      this.service.store(this.userForm.value)\r\n        .subscribe(\r\n          data => M.toast({ html:'Criado com sucesso', classes:'succes' }),\r\n          error => M.toast({ html:error, classes:'fail' })\r\n        );\r\n    }\r\n  }\r\n\r\n  clean = () => this.userForm.reset();\r\n\r\n}\r\n","<form\r\n  class=\"col s8 card-panel\"\r\n  [formGroup]=\"userForm\"\r\n  autocomplete=\"off\"\r\n  autocomplete=\"false\"\r\n>\r\n  <div class=\"row\">\r\n    <div class=\"col s12 center-align\">\r\n      <h4>Cadastrar Usuários</h4>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">  \r\n\r\n    <div class=\"input-field col m4 s6\">\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Nome\" \r\n        formControlName=\"name\"\r\n        />\r\n      <label for=\"name\">Nome</label>\r\n    </div>\r\n\r\n    <div class=\"input-field col m4 s6\">\r\n      <input \r\n        type=\"text\"\r\n        placeholder=\"CPF\"\r\n        formControlName=\"cpf\" \r\n        name=\"cpf\"\r\n        mask=\"000.000.000-00\"\r\n        />\r\n      <label for=\"cpf\">CPF</label>\r\n    </div>\r\n\r\n    <div class=\"input-field col m4 s12\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Usuário para login\"\r\n        formControlName=\"user\"\r\n        name=\"user\"\r\n      />\r\n      <label for=\"user\">Usuário</label>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div class=\"row\">  \r\n\r\n    <div class=\"input-field col m4 s6\">\r\n      <input \r\n        type=\"email\" \r\n        placeholder=\"Email\" \r\n        formControlName=\"email\"\r\n        />\r\n      <label for=\"email\">Email</label>\r\n    </div>\r\n\r\n    <div class=\"input-field col m4 s6\">\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Senha\"\r\n        formControlName=\"password\"\r\n        name=\"password\"\r\n      />\r\n      <label for=\"password\">Password</label>\r\n    </div>\r\n\r\n    <div class=\"input-field col m4 s12\">\r\n      <ng-select\r\n        [items]=\"roles?.data\"\r\n        bindLabel=\"name\"\r\n        bindValue=\"id\"\r\n        formControlName=\"role_id\"\r\n        placeholder=\"Cargos\"\r\n        class=\"custom\"\r\n      ></ng-select>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col m3 s6 push-m3\">\r\n      <button class=\"btn red\" (click)=\"clean()\" *ngIf=\"!userForm?.value?.id\">\r\n        Limpar\r\n      </button>\r\n    </div>\r\n    <div class=\"col m3 s6 push-m3\">\r\n      <button\r\n        class=\"btn blue darken-1\"\r\n        (click)=\"onSubmit()\"\r\n        [disabled]=\"userForm?.invalid\"\r\n      >\r\n    {{ (userForm?.value?.id) ? \"Editar\":\"Cadastrar\" }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '@shared/services/user.service';\r\nimport * as M from 'materialize-css';\r\nimport { ErrorInterceptor } from '@shared/helpers/error.interceptor';\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  usersInfos;\r\n  authUser;\r\n\r\n  constructor(\r\n    private service: UserService,\r\n    private authService: AuthenticationService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authUser = this.authService.currentUserValue;\r\n    this.getUsers();\r\n  }\r\n\r\n  getUsers = () => this.service.getAll()\r\n    .subscribe(\r\n      data => this.usersInfos = data,\r\n      error => M.toast({ html:error, classes:'fail' })\r\n    )\r\n\r\n  delete = (user) => {\r\n    this.service.delete(user?.id)\r\n      .subscribe(\r\n        data => this.getUsers(),\r\n        error => M.toast({ html:error, classes:'fail' })\r\n      )\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col s12\">\r\n        <h3 style=\"text-align: center;\">Usuários</h3>\r\n    </div>\r\n</div>\r\n\r\n<table class=\"striped responsive-table\">\r\n    <thead>\r\n        <tr>\r\n            <th>Nome</th>\r\n            <th>Usuário</th>\r\n            <th>CPF</th>\r\n            <th>Tipo</th>\r\n            <th *ngIf=\"authUser.role_id === 1\">Editar</th>\r\n            <th *ngIf=\"authUser.role_id === 1\">Excluir</th>\r\n        </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n        <tr *ngFor=\"let user of usersInfos?.data\">\r\n            <td>{{ user?.name }}</td>\r\n            <td>{{ user?.user }}</td>\r\n            <td>{{ user?.cpf }}</td>\r\n            <td>{{ user?.role.name }}</td>\r\n            <td *ngIf=\"authUser.role_id === 1\">\r\n                <a class=\"orange-text\" routerLink=\"//users/{{user.id}}\">\r\n                    <i class=\"material-icons\">\r\n                        create\r\n                    </i>\r\n                </a>\r\n            </td>\r\n            <td *ngIf=\"authUser.role_id === 1\">\r\n                <a class=\"red-text clickable\" (click)=\"delete(user)\">\r\n                    <i class=\"material-icons\">\r\n                        delete\r\n                    </i>\r\n                </a>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: \"http://localhost:8080\",\r\n  getInventoryDownUrl: \"http://localhost:8080/reports/pdf/get-inventory-down-products\",\r\n  downloadInventoryDownUrl: \"http://localhost:8080/reports/pdf/download-inventory-down-products\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}