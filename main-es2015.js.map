{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/categories/categories.component.ts","./src/app/categories/categories.component.html","./src/app/click-outside.directive.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/hover-class.directive.ts","./src/app/inventory/inventory.component.ts","./src/app/inventory/inventory.component.html","./src/app/loading/loading.component.ts","./src/app/loading/loading.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/products/products.component.ts","./src/app/products/products.component.html","./src/app/recovery-password/recovery-password.component.ts","./src/app/recovery-password/recovery-password.component.html","./src/app/reports/reports.component.ts","./src/app/reports/reports.component.html","./src/app/sales/sales.component.ts","./src/app/sales/sales.component.html","./src/app/shared/components/pagination/pagination.component.ts","./src/app/shared/components/pagination/pagination.component.html","./src/app/shared/forms/categories.ts","./src/app/shared/forms/login.ts","./src/app/shared/forms/products.ts","./src/app/shared/forms/recovery.ts","./src/app/shared/forms/reportObsoleteProduct.ts","./src/app/shared/forms/sales.ts","./src/app/shared/forms/users.ts","./src/app/shared/helpers/auth.guard.ts","./src/app/shared/helpers/error.interceptor.ts","./src/app/shared/helpers/jwt.interceptor.ts","./src/app/shared/helpers/loading.interceptor.ts","./src/app/shared/helpers/pagination.ts","./src/app/shared/services/authentication.service.ts","./src/app/shared/services/categories.service.ts","./src/app/shared/services/feeds.service.ts","./src/app/shared/services/loading.service.ts","./src/app/shared/services/notifications.service.ts","./src/app/shared/services/products.service.ts","./src/app/shared/services/reports.service.ts","./src/app/shared/services/roles.service.ts","./src/app/shared/services/sales.service.ts","./src/app/shared/services/user.service.ts","./src/app/sidenav/sidenav.component.ts","./src/app/sidenav/sidenav.component.html","./src/app/users-form/users-form.component.ts","./src/app/users-form/users-form.component.html","./src/app/users/users.component.ts","./src/app/users/users.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { AuthGuard } from '@shared/helpers/auth.guard';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SalesComponent } from './sales/sales.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { ReportsComponent } from './reports/reports.component';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { UsersFormComponent } from './users-form/users-form.component';\r\nimport { InventoryComponent } from './inventory/inventory.component';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { RecoveryPasswordComponent } from './recovery-password/recovery-password.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent, canActivate: [AuthGuard] },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'sales', component: SalesComponent, canActivate: [AuthGuard] },\r\n\r\n  { path: 'users', component: UsersComponent, canActivate: [AuthGuard] },\r\n  { path: 'users/:id', component: UsersFormComponent, canActivate: [AuthGuard] },\r\n  { path: 'users-form', component: UsersFormComponent, canActivate: [AuthGuard] },\r\n\r\n  { path: 'products', component: ProductsComponent, canActivate: [AuthGuard] },\r\n  { path: 'products/:id', component: ProductsComponent, canActivate: [AuthGuard] },\r\n\r\n  { path: 'inventory-add', component: InventoryComponent, canActivate: [AuthGuard], data:{type:\"add\"} },\r\n  { path: 'inventory-list', component: InventoryComponent, canActivate: [AuthGuard], data:{type:\"list\"} },\r\n  { path: 'inventory-edit', component: InventoryComponent, canActivate: [AuthGuard], data:{type:\"edit\"} },\r\n  { path: 'inventory-sell', component: InventoryComponent, canActivate: [AuthGuard], data:{type:\"sell\"} },\r\n\r\n  { path: 'categories', component: CategoriesComponent, canActivate: [AuthGuard] },\r\n\r\n  { path: 'reports', component: ReportsComponent, canActivate: [AuthGuard] },\r\n  \r\n  { path: 'recovery-password', component: RecoveryPasswordComponent },\r\n  \r\n  { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\nimport { Router, Event } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit{\r\n  title = 'front-end';\r\n  hidden :boolean = true;\r\n  constructor(\r\n    private authService: AuthenticationService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.router.events.subscribe((event: Event) => {\r\n      this.hidden = (this.authService.isLogged()) ? false: true;\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<app-loading>\r\n</app-loading>\r\n\r\n<app-navbar [hidden]=\"hidden\"></app-navbar>\r\n<app-sidenav [hidden]=\"hidden\"></app-sidenav>\r\n<main style=\"margin:2% 5% 0% 5%;\" [ngClass]=\"{'inside':!hidden}\">\r\n  <router-outlet></router-outlet>\r\n</main>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgxMaskModule } from 'ngx-mask';\r\nimport { NgxCurrencyModule } from 'ngx-currency';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { JwtInterceptor } from '@shared/helpers/jwt.interceptor';\r\nimport { ErrorInterceptor } from '@shared/helpers/error.interceptor';\r\nimport { ProductsComponent } from './products/products.component';\r\nimport { CategoriesComponent } from './categories/categories.component';\r\nimport { InventoryComponent } from './inventory/inventory.component';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { SidenavComponent } from './sidenav/sidenav.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { SalesComponent } from './sales/sales.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { UsersComponent } from './users/users.component';\r\nimport { UsersFormComponent } from './users-form/users-form.component';\r\nimport { ClickOutsideDirective } from './click-outside.directive';\r\nimport { HoverClassDirective } from './hover-class.directive';\r\nimport { ReportsComponent } from './reports/reports.component';\r\nimport { PaginationComponent } from './shared/components/pagination/pagination.component';\r\nimport { LoadingComponent } from './loading/loading.component';\r\nimport { LoadingInterceptorService } from '@shared/helpers/loading.interceptor';\r\nimport { RecoveryPasswordComponent } from './recovery-password/recovery-password.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ProductsComponent,\r\n    CategoriesComponent,\r\n    InventoryComponent,\r\n    SidenavComponent,\r\n    NavbarComponent,\r\n    SalesComponent,\r\n    HomeComponent,\r\n    ClickOutsideDirective,\r\n    UsersComponent,\r\n    UsersFormComponent,\r\n    HoverClassDirective,\r\n    ReportsComponent,\r\n    PaginationComponent,\r\n    LoadingComponent,\r\n    RecoveryPasswordComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    NgSelectModule,\r\n    NgxMaskModule.forRoot(),\r\n    NgxCurrencyModule\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: LoadingInterceptorService, multi: true }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { CategoriesService } from '@shared/services/categories.service';\r\nimport { CategoryForm } from '@shared/forms/categories';\r\nimport * as M from 'materialize-css';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-categories',\r\n  templateUrl: './categories.component.html',\r\n  styleUrls: ['./categories.component.scss']\r\n})\r\n\r\nexport class CategoriesComponent implements OnInit {\r\n  @ViewChild('name') nameField: ElementRef;\r\n\r\n  public categoryForm: FormGroup;\r\n  public categoriesInfos;\r\n  public category;\r\n  public loading: boolean = false;\r\n\r\n  constructor(\r\n    private service: CategoriesService,\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.categoryForm = this.formBuilder.group(new CategoryForm);\r\n    this.route.queryParams\r\n    .subscribe(({page}) => this.getCategories(page));\r\n  }\r\n\r\n  selectCategory = (category) => {\r\n    this.nameField.nativeElement.focus();\r\n    this.category = category;\r\n    this.fillForm();\r\n  }\r\n\r\n  fillForm = () => this.categoryForm.patchValue(this.category);\r\n\r\n  emptyForm = () => {\r\n    this.category = null;\r\n  }\r\n\r\n  onSubmit() {\r\n    this.loading = true;\r\n    if(this.categoryForm.invalid) {\r\n      return\r\n    }\r\n\r\n    if(this.category) {\r\n      this.service.update(this.categoryForm.value)\r\n      .subscribe(\r\n        (response:any) => {\r\n          M.toast({html: response?.message, classes:'succes'}); \r\n          this.getCategories();\r\n          this.emptyForm();\r\n        },\r\n        error => M.toast({html: error, classes:'fail'}),\r\n        () => this.loading = false\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.service.store(this.categoryForm.value)\r\n    .subscribe(\r\n      (data:any) => {  \r\n        M.toast({html: data?.message, classes:'succes'}); \r\n        this.getCategories()\r\n      },\r\n      error => M.toast({html: error, classes:'fail'}),\r\n      () => this.loading = false\r\n      \r\n    )\r\n  }\r\n\r\n  getCategories = (page = 1) => this.service.get(page)\r\n  .subscribe(\r\n    response => this.categoriesInfos = response,\r\n    error => M.toast({html: error, classes:'fail'})\r\n  );\r\n\r\n  deleteCategory = (category) => this.service.delete(category)\r\n    .subscribe(\r\n      data => {\r\n        M.toast({ html:'Deletado com sucesso', classes:'succes' });\r\n        this.getCategories();\r\n      },\r\n      error => M.toast({ html:'Erro ao deletar', classes:'fail' })\r\n    )\r\n\r\n  get pagination() {\r\n    return [...Array( this.categoriesInfos?.last_page ).keys()];\r\n  }\r\n\r\n}\r\n","<form class=\"col s8 card-panel\" [formGroup]=\"categoryForm\">\r\n    <div class=\"row\">\r\n        <div class=\"col s12 center-align\">\r\n            <h4>Cadastrar Categoria</h4>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"input-field col s12 m8\">\r\n            <input #name type=\"text\" placeholder=\"Nome da categoria\" formControlName=\"name\">\r\n        </div>\r\n        <div class=\"col s6 m3\">\r\n            <button class=\"btn orange darken-1\" [disabled]=\"loading\" (click)=\"onSubmit()\">{{(!category)?\"Cadastrar\":\"Editar\"}}</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col s3 push-s3\">\r\n        </div>\r\n    </div>\r\n</form>\r\n\r\n<app-pagination\r\n    [arrayInfos]=\"categoriesInfos\"\r\n    moduleUrl=\"categories\"\r\n    [page]=\"categoriesInfos?.current_page\"\r\n></app-pagination>\r\n\r\n<table>\r\n    <thead>\r\n        <tr>\r\n            <th>Name</th>\r\n            <th>Editar</th>\r\n            <th>Excluir</th>\r\n        </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n        <tr *ngFor=\"let category of categoriesInfos?.data\">\r\n            <td>{{category.name}}</td>\r\n            <td>\r\n                <a class=\"orange-text clickable\" (click)=\"selectCategory(category)\">\r\n                    <i class=\"material-icons\">\r\n                        create\r\n                    </i>\r\n                </a>\r\n            </td>\r\n            <td>\r\n                <a class=\"red-text clickable\" (click)=\"deleteCategory(category)\">\r\n                    <i class=\"material-icons\">\r\n                        close\r\n                    </i>\r\n                </a>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<app-pagination\r\n    [arrayInfos]=\"categoriesInfos\"\r\n    moduleUrl=\"categories\"\r\n    [page]=\"categoriesInfos?.current_page\"\r\n></app-pagination>\r\n","import {Directive, ElementRef, Output, EventEmitter, HostListener} from '@angular/core';\r\n \r\n@Directive({\r\n    selector: '[clickOutside]'\r\n})\r\nexport class ClickOutsideDirective {\r\n    constructor(private _elementRef : ElementRef) {\r\n    }\r\n \r\n    @Output()\r\n    public clickOutside = new EventEmitter();\r\n \r\n    @HostListener('document:click', ['$event.target'])\r\n    public onClick(targetElement) {\r\n        const clickedInside = this._elementRef.nativeElement.contains(targetElement);\r\n        if (!clickedInside) {\r\n            this.clickOutside.emit(null);\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ProductsService } from '@shared/services/products.service';\r\nimport { SalesService } from '@shared/services/sales.service';\r\nimport { CategoriesService } from '@shared/services/categories.service';\r\nimport { forkJoin } from 'rxjs';\r\nimport { FeedsService } from '@shared/services/feeds.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  categoriesInfos;\r\n  productsInfos;\r\n  salesInfos;\r\n  feedsInfos;\r\n\r\n  constructor(\r\n    private categoriesService: CategoriesService,\r\n    private productsService: ProductsService,\r\n    private salesService: SalesService,\r\n    private feedsService: FeedsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    forkJoin(\r\n      this.categoriesService.get(1),\r\n      this.productsService.get(),\r\n      this.salesService.get(),\r\n      this.feedsService.get(),\r\n    ).subscribe(\r\n      infos => {\r\n        this.categoriesInfos = infos[0];\r\n        this.productsInfos = infos[1];\r\n        this.salesInfos = infos[2];\r\n        this.feedsInfos = infos[3];\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"section\">\r\n        <div class=\"col s12 m4 l4 x13\">\r\n            <div class=\"card gradient-45deg-light-blue-cyan white-text\">\r\n                <div class=\"card-content\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col s7 m7\">\r\n                            <i class=\"material-icons background-round mt-5\">add_shopping_cart</i>\r\n                            <p>Produtos</p>\r\n                        </div>\r\n                        <div class=\"col s5 m5 right-align\">\r\n                            <h5 class=\"mb-0\">{{productsInfos?.total || '-'}}</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col s12 m4 l4 x13\">\r\n            <div class=\"card gradient-45deg-green-teal white-text\">\r\n                <div class=\"card-content\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col s7 m7\">\r\n                            <i class=\"material-icons background-round mt-5\">timeline</i>\r\n                            <p>Vendas</p>\r\n                        </div>\r\n                        <div class=\"col s5 m5 right-align\">\r\n                            <h5 class=\"mb-0\">{{salesInfos?.total || '-'}}</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col s12 m4 l4 x13\">\r\n            <div class=\"card gradient-45deg-red-pink white-text\">\r\n                <div class=\"card-content\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col s7 m7\">\r\n                            <i class=\"material-icons background-round mt-5\">timeline</i>\r\n                            <p>Categorias</p>\r\n                        </div>\r\n                        <div class=\"col s5 m5 right-align\">\r\n                            <h5 class=\"mb-0\">{{categoriesInfos?.total || '-'}}</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"section\">\r\n        <div class=\"col s12\">\r\n            <ul class=\"collection\">\r\n                <li class=\"collection-header center\"><h4>Atividades</h4></li>\r\n\r\n                <li *ngFor=\"let item of feedsInfos?.data\" class=\"collection-item\">{{ item?.hour }} {{ item?.action }}</li>\r\n              </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Directive, HostListener, ElementRef, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[hover-class]'\r\n})\r\nexport class HoverClassDirective {\r\n\r\n  constructor(public elementRef:ElementRef) {\r\n    console.log(elementRef)\r\n   }\r\n  @Input('hover-class') hoverClass:any;  \r\n\r\n  @HostListener('mouseenter') onMouseEnter() {\r\n    this.elementRef.nativeElement.classList.add(this.hoverClass);\r\n }\r\n\r\n  @HostListener('mouseleave') onMouseLeave() {\r\n    this.elementRef.nativeElement.classList.remove(this.hoverClass);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ProductsService } from '@shared/services/products.service';\r\nimport { Product } from '@shared/models/product';\r\nimport * as M from 'materialize-css';\r\nimport { ActivatedRoute, Router, Params } from '@angular/router';\r\nimport { SalesService } from '@shared/services/sales.service';\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { SaleForm } from '@shared/forms/sales';\r\nimport { Pagination } from '@shared/models/pagination';\r\n\r\n@Component({\r\n  selector: 'app-inventory',\r\n  templateUrl: './inventory.component.html',\r\n  styleUrls: ['./inventory.component.scss']\r\n})\r\nexport class InventoryComponent implements OnInit {\r\n\r\n  public loading: boolean = false;\r\n  public productsInfos;\r\n  public loggedUser;\r\n  public selectedProduct: Product;\r\n  public amount: number;\r\n  public filter: string;\r\n  public filterType: string = \"title\";\r\n  public screenType: string = \"\";\r\n  public saleForm: FormGroup;\r\n  public page;\r\n  \r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private service: ProductsService,\r\n    private salesService: SalesService,\r\n    private formBuilder: FormBuilder,\r\n    private authenticationService: AuthenticationService,\r\n    public router: Router,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loggedUser = this.authenticationService.currentUserValue;\r\n    this.screenType = this.route.snapshot.data.type;\r\n    this.initializeSaleForm();\r\n    this.route.queryParams\r\n    .subscribe(\r\n      ({page}) => {\r\n          this.page = page;\r\n          (this.haveFilter()) ? this.search(`${this.service.filter}`, page): this.getProducts(page);\r\n        }, \r\n        (error) => M.toast({html:error, classes: 'fail'})\r\n      );\r\n    M.updateTextFields();\r\n    this.initializeSelect();\r\n    this.initializeModal();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.service.filter = null;\r\n  }\r\n\r\n  getProducts = (page?) => this.service.get(page)\r\n    .subscribe(\r\n      data => this.productsInfos = data,\r\n      error => M.toast({html: error, classes:'fail'})\r\n    )\r\n\r\n  selectProduct = (product) => {\r\n    this.selectedProduct = product;\r\n    this.saleForm.patchValue({ product_id: product.id });\r\n  };\r\n\r\n  get pagination() {\r\n    return [...Array(this.productsInfos?.last_page).keys()];\r\n  }\r\n\r\n  initializeModal = () => {\r\n    var elems = document.querySelectorAll('.modal');\r\n    var instances = M.Modal.init(elems, {});\r\n  }\r\n  \r\n  initializeSelect = () => {\r\n    var elems = document.querySelectorAll('select');\r\n    var instances = M.FormSelect.init(elems, {});\r\n  }\r\n\r\n  sell = () => {\r\n\r\n    this.saleForm.controls['price'].setValue((this.saleForm.value.amount * this.selectedProduct.value_sell ));\r\n\r\n    this.salesService.store(this.saleForm.value)\r\n    .subscribe(\r\n      data => {\r\n        M.toast({html: 'Baixa cadastrada', classses:'succes'});\r\n        (this.haveFilter()) ? this.search(`${this.service.filter}&page=${this.page}`): this.getProducts(this.page);\r\n\r\n      }, error => {\r\n        M.toast({ html: error?.amount, classes: 'fail'});\r\n      }\r\n    );\r\n  }\r\n\r\n  addAmount = () => this.service.update({ id: this.selectedProduct.id, amount:(this.amount+this.selectedProduct.amount) })\r\n    .subscribe(\r\n      data => {\r\n        M.toast({html: 'Adicionado com sucesso', classses:'succes'});\r\n        (this.haveFilter()) ? this.search(`${this.service.filter}&page=${this.page}`): this.getProducts(this.page);\r\n      }, error => {\r\n        M.toast({ html: error, classes: 'fail'});\r\n      }\r\n    )\r\n    \r\n  search = (filter?, page?) => {\r\n    this.service.search(\r\n      (filter??`${this.filterType}=${this.filter}`),page\r\n    ).subscribe(\r\n      (products:Pagination) => {\r\n        this.productsInfos = products;\r\n        this.changingQueryParams();\r\n      },\r\n      error => M.toast({ html: error, classes:\"fail\"})\r\n    )\r\n}\r\n  haveFilter = () => this.service.filter;\r\n\r\n  initializeSaleForm = () => {\r\n    this.saleForm = this.formBuilder.group(new SaleForm);\r\n    this.saleForm.patchValue({ user_id: this.loggedUser.id });\r\n  }\r\n\r\n    \r\n  private changingQueryParams() {\r\n    this.router.navigate([], { \r\n      queryParams: {\r\n        page: this.productsInfos?.current_page\r\n      }\r\n    });\r\n  }\r\n\r\n  delete = (product) => this.service.delete(product?.id)\r\n    .subscribe(\r\n      () => this.getProducts(),\r\n      error => M.toast({ html:error, classes:'fail' })\r\n    )\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col s12 center\">\r\n        <h3>{{ screenType === 'sell' ? \"Dar baixa em produtos\" : screenType === 'edit'  ? \"Editar estoque\" : \"Consultar estoque\"}}</h3>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col s12\">\r\n        <h4>Pesquisar</h4>\r\n    </div>\r\n    <form class=\"col s12\">\r\n        <div class=\"row\">\r\n            <div class=\"input-field col m4 s12\">\r\n                <select [(ngModel)]=\"filterType\" name=\"filterType\" id=\"filterType\" placeholder=\"Título\">\r\n                  <!-- <option value=\"\" disable selected>Título</option> -->\r\n                  <option value=\"title\" selected>Título</option>\r\n                  <option value=\"ref\">Referencia</option>\r\n                </select>                \r\n                <label for=\"filterType\">Selecione o filtro</label>\r\n              </div>\r\n            \r\n            <div class=\"input-field col m8 s12\">\r\n                <input type=\"text\" placeholder=\"Título ou Referência do produto\" [(ngModel)]=\"filter\" name=\"filter\" (keyup)=\"search()\">\r\n                <label for=\"filter\">Título ou Referência do produto</label>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n<app-pagination\r\n    [arrayInfos]=\"productsInfos\"\r\n    moduleUrl=\"inventory-{{screenType}}\"\r\n    [page]=\"productsInfos?.current_page\"\r\n></app-pagination>\r\n\r\n<table class=\"responsive-table striped\">\r\n    <thead>\r\n        <tr>\r\n            <th>Ref.</th>\r\n            <th>Nome</th>\r\n            <th>Custo</th>\r\n            <th>Valor Venda</th>\r\n            <th>Aplicação</th>\r\n            <th>Quantidade</th>\r\n            <th *ngIf=\"screenType === 'sell'\">Baixa</th>\r\n            <th *ngIf=\"screenType === 'edit'\">Editar</th>\r\n            <th *ngIf=\"screenType === 'add'\">Adicionar</th>\r\n            <th *ngIf=\"loggedUser?.role_id == 1 && screenType === 'edit'\">Excluir</th>\r\n        </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n        <tr *ngFor=\"let product of productsInfos?.data\">\r\n            <td>{{ product.ref }}</td>\r\n            <td>{{ product.title }}</td>\r\n            <td>{{ product.value_buy }}</td>\r\n            <td>{{ product.value_sell }}</td>\r\n            <td id=\"application\">{{ product.application }}</td>\r\n            <td>{{ product.amount }}</td>\r\n            <td *ngIf=\"screenType === 'sell'\">\r\n                <a class=\"green-text modal-trigger clickable\" data-target=\"sells\" (click)=\"selectProduct(product)\">\r\n                    <i class=\"material-icons\">\r\n                        shopping_cart\r\n                    </i>\r\n                </a>\r\n            </td>\r\n            <td *ngIf=\"screenType === 'edit'\">\r\n                <a class=\"orange-text\" routerLink=\"//products/{{product.id}}\">\r\n                    <i class=\"material-icons\">\r\n                        create\r\n                    </i>\r\n                </a>\r\n            </td>\r\n            <td *ngIf=\"screenType === 'add'\">\r\n                <a class=\"green-text darken-1 modal-trigger clickable add\" hover-class=\"orange-text\" data-target=\"add-amount\" (click)=\"selectProduct(product)\">\r\n                    <i class=\"material-icons\">\r\n                        add\r\n                    </i>\r\n                </a>\r\n            </td>\r\n            <td *ngIf=\"loggedUser?.role_id == 1 && screenType === 'edit'\">\r\n                <a class=\"red-text clickable\" (click)=\"delete(product)\">\r\n                    <i class=\"material-icons\">\r\n                        delete\r\n                    </i>\r\n                </a>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<app-pagination\r\n    [arrayInfos]=\"productsInfos\"\r\n    moduleUrl=\"inventory-{{screenType}}\"\r\n    [page]=\"productsInfos?.current_page\"\r\n></app-pagination>\r\n\r\n<!-- Modal Structure -->\r\n<div id=\"sells\" class=\"modal sells\">\r\n    <div class=\"modal-content\">\r\n        <h4>Dar baixa em {{ selectedProduct?.title }}</h4>\r\n        <form class=\"col s12\" [formGroup]=\"saleForm\">\r\n            <div class=\"row\">\r\n                <div class=\"input-field col s12\">\r\n                    <input type=\"number\" placeholder=\"Quantidade\" formControlName=\"amount\" name=\"amount\">\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <div class=\"row\">\r\n            <div class=\"col s6 m3 push-sm\">\r\n                <button class=\"modal-close btn grey lighten-2 black-text\">Fechar</button>\r\n            </div>\r\n            <div class=\"col s6 m3 push-m6\">\r\n                <button class=\"waves-effect waves-orange btn orange darken-1\" (click)=\"sell()\">Registrar</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- Modal Structure -->\r\n<div id=\"add-amount\" class=\"modal\">\r\n    <div class=\"modal-content\">\r\n        <h4>Adicionar ao estoque {{ selectedProduct?.title }}</h4>\r\n        <span>Atualmente possui <strong class=\"succes\">{{ selectedProduct?.amount }} itens</strong> </span>\r\n        <form class=\"col s12\" >\r\n            <div class=\"row\">\r\n                <div class=\"input-field col s12\">\r\n                    <input type=\"number\" placeholder=\"Quantidade\" [(ngModel)]=\"amount\" name=\"amount\">\r\n                    <label for=\"amount\">Quantidade que deseja adicionar</label>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <div class=\"row\">\r\n            <div class=\"col s3 push-s3\">\r\n                <button class=\"modal-close btn grey lighten-2 black-text\">Fechar</button>\r\n            </div>\r\n            <div class=\"col s3 push-s3\">\r\n                <button class=\"waves-effect waves-orange btn orange darken-1\" (click)=\"addAmount()\">Adicionar</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, ElementRef, ChangeDetectorRef, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { LoadingService } from 'src/app/shared/services/loading.service';\r\n\r\n@Component({\r\n  selector: 'app-loading',\r\n  templateUrl: './loading.component.html',\r\n  styleUrls: ['./loading.component.scss']\r\n})\r\nexport class LoadingComponent implements AfterViewInit, OnDestroy {\r\n  loadingSubscription: Subscription;\r\n  \r\n  constructor(\r\n    private loadingScreenService: LoadingService,\r\n    private _elmRef: ElementRef,\r\n    private _changeDetectorRef: ChangeDetectorRef\r\n  ) { }\r\n\r\n  ngAfterViewInit(): void {\r\n    this._elmRef.nativeElement.style.display = 'none';\r\n    this.loadingSubscription = this.loadingScreenService.loading$.pipe().subscribe(\r\n      (status: boolean) => {\r\n        this._elmRef.nativeElement.style.display = status ? 'block' : 'none';\r\n        this._changeDetectorRef.detectChanges();\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.loadingSubscription.unsubscribe();\r\n  }\r\n}","  <div class=\"wrapper\">\r\n      <div class=\"preloader-wrapper big active\">\r\n        <div class=\"spinner-layer spinner-orange-only\">\r\n          <div class=\"circle-clipper left\">\r\n            <div class=\"circle\"></div>\r\n          </div><div class=\"gap-patch\">\r\n            <div class=\"circle\"></div>\r\n          </div><div class=\"circle-clipper right\">\r\n            <div class=\"circle\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { Login } from '@shared/forms/login';\r\nimport * as M from 'materialize-css';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public loginForm: FormGroup;\r\n  public recoveryForm: FormGroup;\r\n  recoveryPass = false;\r\n  loading = false;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  error = '';\r\n  \r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {\r\n    if(this.authenticationService.currentUserValue) {\r\n      this.router.navigate(['/']);\r\n    }\r\n   }\r\n  \r\n  ngOnInit(): void {\r\n    M.updateTextFields();\r\n    this.loginForm = this.formBuilder.group(new Login);\r\n    this.recoveryForm = this.formBuilder.group({\r\n      user : new FormControl('', Validators.required)\r\n    });\r\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';    \r\n  }\r\n\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\r\n    if(this.loginForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    this.loading = true;\r\n    this.authenticationService.login(this.f.user.value, this.f.password.value)\r\n    .pipe(first())\r\n    .subscribe(\r\n      data => this.router.navigate(['/']),\r\n      error => {\r\n        M.toast({ html:\"Usuário ou senha incorretos\", classes:\"fail\"})\r\n        this.error = error;\r\n        this.loading = false;\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  recovery = () => {\r\n    this.authenticationService.createRecoveryPassord(this.recoveryForm.value)\r\n      .subscribe(\r\n        data => M.toast({ html: \"Email enviado!\"}),\r\n        error => M.toast({ html: error, classes:'fail'}),\r\n      )\r\n\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"row valign-wrapper loginBg\">\r\n    <form class=\"col s12 m8 pull-m2 login\" [formGroup]=\"loginForm\" *ngIf=\"!recoveryPass\">\r\n        <div class=\"logo\">Autopeças</div>\r\n        <div class=\"row\">\r\n            <div class=\"col s12 black-background\">\r\n                <div class=\"row\">\r\n                    <div class=\"col s12\">\r\n                        <h5 class=\"\">Entrar</h5>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"input-field col s12\">\r\n                        <input placeholder=\"Usuário\" id=\"user\" type=\"text\" class=\"validate\" formControlName=\"user\">\r\n                      </div>\r\n                      <div class=\"input-field col s12\">\r\n                        <input placeholder=\"Senha\" id=\"password\" type=\"password\" class=\"validate\" formControlName=\"password\">\r\n                      </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col s12 m4\">\r\n                        <button class=\"waves-effect waves-light btn orange darken-3 white-text\" (click)=\"onSubmit()\">\r\n                            Entrar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <br>\r\n                <span class=\"orange-text clickable\" (click)=\"recoveryPass=true\"> Esqueceu a senha?</span>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <form class=\"col s12 pull-s2 login\" [formGroup]=\"recoveryForm\" *ngIf=\"recoveryPass\">\r\n        <div class=\"row back clickable\">\r\n            <div class=\"col s12\" (click)=\"recoveryPass=false\">\r\n                <span class=\"material-icons\">\r\n                    keyboard_arrow_left\r\n                </span>\r\n                <span>Entrar</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col s8 push-s2\">\r\n                <div class=\"row\">\r\n                    <div class=\"col s12\">\r\n                        <h5 class=\"\">Recuperar senha</h5>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"input-field col s12\">\r\n                        <input placeholder=\"Usuário\" id=\"user\" type=\"text\" class=\"validate\" formControlName=\"user\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col s6\">\r\n                        <button class=\"waves-effect waves-light btn orange darken-3 white-text\" (click)=\"recovery()\">\r\n                            Entrar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NotificationsService } from '@shared/services/notifications.service';\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\nimport { UserService } from '@shared/services/user.service';\r\n\r\nimport * as M from 'materialize-css';\r\nimport { Router, Event, NavigationStart } from '@angular/router';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.scss']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n  notifications = { data: [{read_at:''}]};\r\n  show = false;\r\n  clickOutCounter = 0;\r\n  loggedUserName = \"\";\r\n\r\n  constructor(\r\n    private notificationsService: NotificationsService,\r\n    private authService: AuthenticationService,\r\n    private service: UserService,\r\n    private router: Router\r\n    \r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.service.find(this.authService.currentUserValue.id)\r\n    .subscribe(\r\n      data => this.loggedUserName = data.name\r\n    )\r\n    this.router.events.forEach((event) => {\r\n      const result = location?.pathname.indexOf('login') > -1 || location?.pathname.indexOf('recovery-password') > -1;\r\n      if(event instanceof NavigationStart) {\r\n        if( !result) {\r\n          this.getNotifications();\r\n        }\r\n      }\r\n      // NavigationEnd\r\n      // NavigationCancel\r\n      // NavigationError\r\n      // RoutesRecognized\r\n    });\r\n  }\r\n\r\n  showNotifications = () => this.show = true;\r\n\r\n  hideNotifications = () => {\r\n    \r\n    if( this.clickOutCounter === 0 ) {\r\n      this.sumClickOut();\r\n    } else {\r\n      this.show = false;\r\n      this.clickOutCounter = 0;\r\n    }\r\n  }\r\n\r\n  sumClickOut = () => this.clickOutCounter++;\r\n\r\n  markAllAsRead = () => {\r\n    this.notificationsService.marAsRead(this.authService.currentUserValue.id)\r\n    .subscribe(\r\n      () => this.getNotifications(),\r\n      error => M.toast({html:\"Erro ao buscar notificações\", classes:\"fail\"})\r\n\r\n    )\r\n  }\r\n\r\n  getNotifications = () => {\r\n    this.notificationsService.get(this.authService?.currentUserValue?.id)\r\n    .subscribe(\r\n      data => {\r\n        this.notifications = data;\r\n        this.show = false;\r\n      },\r\n      error => M.toast({html:\"Erro ao buscar notificações\", classes:\"fail\"})\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"navbar-fixed\">\r\n  <nav>\r\n    <div class=\"nav-wrapper\">\r\n      <a href=\"#\" data-target=\"slide-out\" class=\"sidenav-trigger\"><i class=\"material-icons\">menu</i></a>\r\n\r\n      <ul id=\"nav-mobile\" class=\"right\">\r\n        <li class=\"clickable icon-pulldown\" (click)=\"showNotifications()\">\r\n          <span class=\"material-icons\">\r\n            notifications\r\n          </span>\r\n          <span *ngIf=\"(notifications?.data[0]?.read_at == null)\" class=\"badge-point\"></span>\r\n        </li>\r\n        <li class=\"icon-pulldown user-icon\">\r\n          <span class=\"material-icons\">\r\n            account_circle\r\n          </span>\r\n        </li>\r\n        <li class=\"logged-user-name\">\r\n          <span>\r\n            {{this.loggedUserName}}\r\n          </span>\r\n        </li>\r\n        <li>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n</div>\r\n\r\n<ul class=\"notifications .dropdown-contet\" *ngIf=\"show\" (clickOutside)=\"hideNotifications()\">\r\n  <li class=\"right-align\">\r\n    <span class=\"title\">\r\n      NOTIFICAÇÕES\r\n    </span>\r\n    <span class=\"material-icons white-text mark-as-read clickable\" (click)=\"markAllAsRead()\">\r\n      playlist_add_check\r\n    </span>\r\n  </li>\r\n  <li class=\"divider\"></li>\r\n  <li *ngFor=\"let notification of notifications?.data\" [ngClass]=\"{'unread': (notification?.read_at == null)}\">\r\n    <span class=\"material-icons background-round small orange darken-3\">\r\n      trending_down\r\n    </span>\r\n    {{notification?.data?.name}} ({{notification?.data?.title}})\r\n  </li>\r\n</ul>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { ProductForm } from '@shared/forms/products';\r\nimport { ProductsService } from '@shared/services/products.service';\r\nimport { CategoriesService } from '@shared/services/categories.service';\r\nimport * as M from 'materialize-css';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-products',\r\n  templateUrl: './products.component.html',\r\n  styleUrls: ['./products.component.scss']\r\n})\r\nexport class ProductsComponent implements OnInit {\r\n\r\n  public productForm: FormGroup;\r\n  public categories;\r\n  public autocomplete;\r\n  public aa;\r\n  public selectedCategory;\r\n  public loading: boolean = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private service: ProductsService,\r\n    private categoriesService: CategoriesService,\r\n    private route: ActivatedRoute\r\n  ) {\r\n\r\n   }\r\n\r\n  ngOnInit(): void {\r\n    M.updateTextFields();\r\n\r\n    this.productForm = this.formBuilder.group(new ProductForm);\r\n    this.getCategories();\r\n    if(this.route.snapshot.paramMap.get('id')) {\r\n      this.service.find(this.route.snapshot.paramMap.get('id'))\r\n        .subscribe(\r\n          (product) => {\r\n            this.productForm.patchValue(product);\r\n            M.updateTextFields();            \r\n            M.textareaAutoResize(document.querySelector('.materialize-textarea'));\r\n          },\r\n          error => M.toast({ html: error, classes:'fail'})\r\n        );\r\n    }\r\n  }\r\n\r\n  onSubmit() {\r\n    this.loading = true;\r\n    if(this.productForm.invalid) {\r\n      return;\r\n    }\r\n\r\n    if(this.productForm.value.id) {\r\n      this.service.update(this.productForm.value)\r\n      .subscribe(\r\n        () => M.toast({html: \"Atualizado com sucesso\", classes:'succes'}),\r\n        error => M.toast({html: error, classes:'fail'}),\r\n        () => this.loading = false\r\n      )\r\n    } else {\r\n    this.service.store(this.productForm.value)\r\n      .subscribe(\r\n        () => {\r\n          M.toast({html: \"Cadastrado com sucesso\", classes:'succes'});\r\n          this.productForm.reset();\r\n        },\r\n        error => {\r\n          this.handleError(error);\r\n          this.loading = false;\r\n        },\r\n        () => this.loading = false\r\n      )\r\n    }\r\n  }\r\n\r\n  getCategories = () => this.categoriesService.get()\r\n  .subscribe(\r\n    (categories:any) =>  this.categories = categories,\r\n    error => M.toast({html: error, classes:'fail'})\r\n    );\r\n\r\n  handleError = (e) => {\r\n      const formFields = Object.keys(this.productForm.value);\r\n      const errorsFields = Object.keys(e);\r\n      let fields:any = formFields.filter(value => errorsFields.includes(value));\r\n      fields.map(f => this.productForm.controls[f].setErrors({'unavailable': true}))\r\n  }\r\n\r\n  clean = () => this.productForm.reset();\r\n  get formControls() { return this.productForm.controls; }\r\n\r\n}\r\n","<form\r\n  class=\"col s8 card-panel\"\r\n  [formGroup]=\"productForm\"\r\n  autocomplete=\"off\"\r\n  autocomplete=\"false\"\r\n>\r\n  <div class=\"row\">\r\n    <div class=\"col s12 center-align\">\r\n      <h4>{{this.productForm?.value?.id ? \"Editar\" : \"Cadastrar\"}} Produtos</h4>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">    \r\n    <div class=\"input-field col m4 s6\">\r\n      <input type=\"text\" placeholder=\"Nome da peça\" formControlName=\"title\" />\r\n      <label for=\"title\">Título</label>\r\n      \r\n    </div>\r\n    <div class=\"input-field col m4 s6\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Referência\"\r\n        formControlName=\"ref\"\r\n        name=\"ref\"\r\n        [ngClass]=\"{\r\n          'validate invalid': formControls?.ref?.errors?.unavailable\r\n        }\"\r\n      />\r\n      <label for=\"ref\">Referência</label>\r\n      <span\r\n        *ngIf=\"formControls?.ref?.errors?.unavailable\"\r\n        data-error=\"Referência já cadastrada\"\r\n        data-succes=\"right\"\r\n        class=\"helper-text\"\r\n      ></span>\r\n    </div>\r\n    <div class=\"input-field col m2 s6\">\r\n      <input type=\"number\" placeholder=\"Quantidade\" formControlName=\"amount\" name=\"amount\"/>\r\n      <label for=\"amount\">Quantidade</label>\r\n    </div>\r\n    <div class=\"input-field col m2 s6\">\r\n      <input type=\"number\" placeholder=\"Notificar abaixo de\" value=\"1\" formControlName=\"limit_amount\" name=\"limit_amount\"/>\r\n      <label for=\"limit_amount\">Estoque Mínimo</label>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"input-field col m4 s6\">\r\n      <label for=\"value_cost\">Valor de custo</label>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Valor de custo\"\r\n        formControlName=\"value_cost\"\r\n        name=\"value_cost\"\r\n        currencyMask\r\n        [options]=\"{\r\n          prefix: 'R$ ',\r\n          thousands: '.',\r\n          decimal: ',',\r\n          align: 'left'\r\n        }\"\r\n      />\r\n    </div>\r\n    <div class=\"input-field col m4 s6\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Valor de venda\"\r\n        formControlName=\"value_sell\"\r\n        name=\"value_sell\"\r\n        currencyMask\r\n        [options]=\"{\r\n          prefix: 'R$ ',\r\n          thousands: '.',\r\n          decimal: ',',\r\n          align: 'left'\r\n        }\"\r\n      />\r\n      <label for=\"value_sell\">Valor de venda</label>\r\n\r\n    </div>\r\n    <div class=\"col m4 s12\">\r\n      <div class=\"row\">\r\n        <div class=\"input-field col s12\">\r\n          <ng-select\r\n            [items]=\"categories\"\r\n            bindLabel=\"name\"\r\n            bindValue=\"id\"\r\n            placeholder=\"Categorias\"\r\n            formControlName=\"category_id\"\r\n          ></ng-select>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"input-field col s12\">\r\n      <textarea\r\n        id=\"textarea1\"\r\n        class=\"materialize-textarea\"\r\n        formControlName=\"application\"\r\n      ></textarea>\r\n      <label for=\"textarea1\">Aplicação</label>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row center-align\">\r\n    <div class=\"col m3 s6\">\r\n      <button\r\n        class=\"btn orange darken-1\"\r\n        (click)=\"onSubmit()\"\r\n        [disabled]=\"productForm?.invalid || loading\"\r\n      >\r\n        {{this.productForm?.value?.id ? \"Salvar\" : \"Cadastrar\"}}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Recovery } from '@shared/forms/recovery';\r\nimport * as M from 'materialize-css';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-recovery-password',\r\n  templateUrl: './recovery-password.component.html',\r\n  styleUrls: ['./recovery-password.component.scss']\r\n})\r\nexport class RecoveryPasswordComponent implements OnInit {\r\n  public recoveryForm: FormGroup;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private service: AuthenticationService\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    M.updateTextFields();\r\n    this.recoveryForm = this.formBuilder.group(new Recovery);\r\n    this.route.queryParams.subscribe(({token}) => {\r\n      this.service.findToken(token)\r\n        .subscribe(\r\n          data => this.recoveryForm.patchValue(data),\r\n          error => M.toast({html:error, classes:'fail'})\r\n        );\r\n\r\n    })\r\n    \r\n  }\r\n\r\n  onSubmit() {\r\n    this.service.recoveryPassword(this.recoveryForm.value)\r\n      .subscribe(\r\n        data => M.toast({html:'Senha alterada com sucesso'}),\r\n        error => M.toast({html: error, classes:'fail'})\r\n      )\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"row valign-wrapper\">\r\n    <form class=\"col s12 pull-s2 login\" [formGroup]=\"recoveryForm\">\r\n        <div class=\"row\">\r\n            <div class=\"col s8 push-s2\">\r\n                <div class=\"row\">\r\n                    <div class=\"col s12\">\r\n                        <h5 class=\"\">Recuperar senha</h5>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"input-field col s12\">\r\n                        <input placeholder=\"Senha\" id=\"password\" type=\"text\" class=\"validate\" formControlName=\"password\">\r\n                      </div>\r\n                      <div class=\"input-field col s12\">\r\n                        <input placeholder=\"Nova senha\" id=\"password_confirmation\" type=\"text\" class=\"validate\" formControlName=\"password_confirmation\">\r\n                      </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col s12\">\r\n                        <button class=\"waves-effect waves-light btn orange darken-3 white-text\" (click)=\"onSubmit()\">\r\n                            Recuperar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport { ReportsService } from '@shared/services/reports.service';\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\nimport { ReportObsoleteProduct } from '@shared/forms/reportObsoleteProduct';\r\nimport { environment } from \"@environment/environment\"\r\n\r\nimport * as M from 'materialize-css';\r\nimport { Product } from '@shared/models/product';\r\n@Component({\r\n  selector: 'app-reports',\r\n  templateUrl: './reports.component.html',\r\n  styleUrls: ['./reports.component.scss']\r\n})\r\nexport class ReportsComponent implements OnInit {\r\n\r\n  reportObsoleteForm: FormGroup;\r\n  reportInventoryDown:Product[];\r\n  data;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private service: ReportsService,\r\n    private authService: AuthenticationService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    M.Tabs.init(document.querySelectorAll('.tabs'), {swipeable:true});\r\n    M.updateTextFields();\r\n    this.reportObsoleteForm = this.formBuilder.group(new ReportObsoleteProduct(this.authService?.currentUserValue?.id));\r\n    this.getInventoryDownProducts();\r\n  }\r\n\r\n  onSubmit() {  \r\n    this.service.obsoleteProducts(this.reportObsoleteForm?.value)\r\n      .subscribe(\r\n        data => this.data = data,\r\n        error => M.toast({ html:error, classes:'error' })\r\n      )\r\n  }\r\n\r\n  getInventoryDownProducts = () => {\r\n    this.service.inventoryDownProducts()\r\n      .subscribe(\r\n        data => this.reportInventoryDown = data,\r\n        error => M.toast({ html: 'Erro ao buscar os produtos', classes: 'fail'})\r\n      )\r\n  }\r\n\r\n  getPdfInventoryDown = () => {\r\n    window.open(environment.getInventoryDownUrl, \"_blank\");\r\n  }\r\n  \r\n  downloadPdfInventoryDown = () => {\r\n    window.open(environment.downloadInventoryDownUrl, \"_blank\");\r\n  }\r\n}\r\n","\r\n<div class=\"row\">\r\n    <div class=\"col s12\">\r\n        <ul id=\"tabs-swipe-demo\" class=\"tabs\">\r\n            <li class=\"tab col s3\"><a class=\"active\" href=\"#obsolete-products\">Produtos Obsoletos</a></li>\r\n            <li class=\"tab col s3\"><a href=\"#inventory-down-products\">Produtos baixo estoque</a></li>\r\n        </ul>\r\n        <div id=\"obsolete-products\" style=\"height: 40em;\">\r\n            <div class=\"row\">\r\n                <form class=\"col s12 m3\" [formGroup]='reportObsoleteForm'>\r\n                    <div class=\"row\">\r\n                        <div style=\"margin: 20px 0 20px 0;\" class=\"col s12 center-align\">\r\n                            <b>Relatório de produtos obsoletos</b>\r\n                        </div>\r\n                        <div class=\"input-field col s12\">\r\n                            <input type=\"date\" placeholder=\"Desde\" formControlName=\"since\" name=\"since\"/>\r\n                            <label for=\"since\">Desde</label>\r\n                        </div>\r\n                        <div class=\"input-field col s12\">\r\n                            <input type=\"date\" placeholder=\"Desde\" formControlName=\"at\" name=\"at\"/>\r\n                            <label for=\"at\">Até</label>\r\n                        </div>\r\n                        <div class=\"input-field col s12\">\r\n                            <input type=\"text\" placeholder=\"Mínimo de venda\"  formControlName=\"minimun_amount\" name=\"limit_amount\"/>\r\n                            <label for=\"minimun_amount\">Mínimo de venda</label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col s12 m9\">\r\n                            <button\r\n                                class=\"btn orange darken-1\"\r\n                                (click)=\"onSubmit()\"\r\n                            >\r\n                                Cadastrar\r\n                            </button>\r\n                            </div>\r\n                    </div>\r\n                </form>\r\n                <div class=\"col s12 m8 list\">\r\n\r\n                    <table class=\"striped responsive-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Nome</th>\r\n                                <th>Quantidade Total</th>\r\n                                <th>Valor Total</th>\r\n                            </tr>\r\n                        </thead>\r\n                    \r\n                        <tbody>\r\n                            <tr *ngFor=\"let product of data?.data\">\r\n                                <td>{{ product?.name }}</td>\r\n                                <td>{{ product?.amount_total }}</td>\r\n                                <td>{{ product?.value }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div id=\"inventory-down-products\" style=\"padding:5%\">\r\n            <div class=\"row\">\r\n                <div class=\"col s3\">\r\n                    <a class=\"btn green darken-1\" (click)=\"downloadPdfInventoryDown()\"><i class=\"material-icons left\">get_app</i>Baixar</a>\r\n                </div>\r\n                <div class=\"col s3\">\r\n                    <a class=\"btn orange darken-1\" (click)=\"getPdfInventoryDown()\"><i class=\"material-icons left\">visibility</i>Visualizar</a>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col s12 list\">\r\n                    <table class=\"striped\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Produto</th>\r\n                                <th>Quantidade mínima</th>\r\n                                <th>Quantidade Total</th>\r\n                            </tr>\r\n                        </thead>\r\n                    \r\n                        <tbody>\r\n                            <tr *ngFor=\"let product of reportInventoryDown\">\r\n                                <td>{{ product?.title }} <br> {{ product?.ref}}</td>\r\n                                <td>{{ product?.limit_amount }}</td>\r\n                                <td>{{ product?.amount }}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { SalesService } from '@shared/services/sales.service';\r\nimport * as M from 'materialize-css';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Pagination } from '@shared/models/pagination';\r\nimport { PaginationHelper } from '@shared/helpers/pagination';\r\n@Component({\r\n  selector: 'app-sales',\r\n  templateUrl: './sales.component.html',\r\n  styleUrls: ['./sales.component.scss']\r\n})\r\nexport class SalesComponent implements OnInit {\r\n\r\n  salesInfos:Pagination;\r\n  page;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private service: SalesService,\r\n    private paginationHelper: PaginationHelper\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getSales();\r\n    this.route.queryParams\r\n      .subscribe(\r\n        ({page}) => this.getSales(page),\r\n        error => M.toast({ html:error, classes:'fail' })\r\n      )\r\n\r\n  }\r\n\r\n  getSales = (page?) => {\r\n    this.page = page;\r\n    this.service.get(page)\r\n    .subscribe(\r\n      data => this.salesInfos = data,\r\n      error => M.toast({ html:error, classes:'fail' })\r\n    );\r\n\r\n  }\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col s12 center\">\r\n        <h3>Baixas</h3>\r\n    </div>\r\n</div>\r\n\r\n<app-pagination\r\n    [arrayInfos]=\"salesInfos\"\r\n    [moduleUrl]=\"'sales'\"\r\n    [page]=\"page\"\r\n></app-pagination>\r\n\r\n<table class=\"striped responsive-table\">\r\n    <thead>\r\n        <tr>\r\n            <th>Ref.</th>\r\n            <th>Nome</th>\r\n            <th>Aplicação</th>\r\n            <th>Quantidade</th>\r\n            <th>Data</th>\r\n        </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n        <tr *ngFor=\"let sale of salesInfos?.data\">\r\n            <td>{{ sale?.product?.ref }}</td>\r\n            <td>{{ sale?.product?.title }}</td>\r\n            <td>{{ sale?.product?.application }}</td>\r\n            <td>{{ sale?.amount }}</td>\r\n            <td>{{ sale?.date }}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { Pagination } from '@shared/models/pagination';\r\nimport { PaginationHelper } from '@shared/helpers/pagination';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-pagination',\r\n  templateUrl: './pagination.component.html',\r\n  styleUrls: ['./pagination.component.scss']\r\n})\r\nexport class PaginationComponent implements OnInit {\r\n  @Input() arrayInfos: Pagination;\r\n  @Input() moduleUrl: string;\r\n  @Input() page: number;\r\n  @Input() filter: string;\r\n\r\n  constructor(\r\n    private paginationHelper: PaginationHelper,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    if(!this.page) {\r\n      this.page = 1;\r\n    }\r\n  }\r\n\r\n      \r\n  get pagination() {\r\n    const paginationNumbers = [...Array(this.arrayInfos?.last_page).keys()];\r\n    const actual = this.paginationHelper.getActual(paginationNumbers, this.page);\r\n    const pagination = this.paginationHelper.getPagination(paginationNumbers, actual);\r\n    return (pagination != -1) ? pagination : [];\r\n  }\r\n\r\n  goTo = (page = 1) =>  {\r\n    this.router.navigate([this.moduleUrl], { queryParams: { page: page } });\r\n  }\r\n}\r\n","<ul class=\"pagination\">\r\n    <li \r\n    class=\"clickable\"\r\n    [ngClass]=\"{'disabled' : (arrayInfos?.current_page === 1)}\"\r\n    (click)=\"goTo(arrayInfos?.current_page - 1)\">\r\n        <i class=\"material-icons\">chevron_left</i>\r\n    </li>\r\n    <li \r\n    *ngFor=\"let page of pagination\" \r\n    class=\"waves-effect\" \r\n    [ngClass]=\"{'active' : (page === arrayInfos?.current_page)}\" \r\n    (click)=\"goTo(page)\">\r\n        <a>{{ page }} </a>\r\n    </li>\r\n    <li \r\n    class=\"clickable\"\r\n    [ngClass]=\"{'disabled' : (arrayInfos?.current_page === arrayInfos?.last_page)}\" \r\n    (click)=\"goTo(arrayInfos?.current_page + 1)\">\r\n        <i class=\"material-icons\">chevron_right</i>\r\n    </li>\r\n    <li \r\n    class=\"clickable\"\r\n    [ngClass]=\"{'disabled' : (arrayInfos?.current_page === arrayInfos?.last_page)}\" \r\n    (click)=\"goTo(arrayInfos?.last_page)\">\r\n        <i class=\"material-icons\">last_page\r\n        </i>\r\n    </li>\r\n</ul>\r\n","import { FormControl, Validators } from '@angular/forms';\r\n\r\nexport class CategoryForm {\r\n    id = new FormControl();    \r\n    name = new FormControl('', Validators.required);    \r\n}","import { FormControl, Validators } from '@angular/forms';\r\n\r\nexport class Login {\r\n\r\n    user = new FormControl('', Validators.required);\r\n    password = new FormControl('', Validators.required);\r\n}","import { FormControl, Validators } from '@angular/forms';\r\n\r\nexport class ProductForm {\r\n\r\n    id = new FormControl(null);\r\n    title = new FormControl('', Validators.required);\r\n    ref = new FormControl('', Validators.required);\r\n    category_id = new FormControl(null, Validators.required);\r\n    application = new FormControl('', Validators.required);\r\n    value_cost = new FormControl('', Validators.required);\r\n    value_sell = new FormControl('', Validators.required);\r\n    amount = new FormControl('', Validators.required);    \r\n    limit_amount = new FormControl('', Validators.required);    \r\n}","import { FormControl, Validators } from '@angular/forms';\r\n\r\nexport class Recovery {\r\n\r\n    email = new FormControl('', Validators.required);\r\n    password = new FormControl('', Validators.required);\r\n    password_confirmation = new FormControl('', Validators.required);\r\n    token = new FormControl('', Validators.required);\r\n\r\n}","import { FormControl, Validators } from '@angular/forms';\r\n\r\nexport class ReportObsoleteProduct {\r\n    constructor(private authUserId?) {\r\n    }\r\n    id? = new FormControl(null);\r\n    user_id = new FormControl(this.authUserId ??null, Validators.required);\r\n    since = new FormControl(null, Validators.required);\r\n    at = new FormControl(null,Validators.required);\r\n    data = new FormControl(null,Validators.required);\r\n    minimun_amount = new FormControl(null,Validators.required);\r\n}","import { FormControl, Validators } from '@angular/forms';\r\n\r\nexport class SaleForm {\r\n    id? = new FormControl(null);\r\n    user_id = new FormControl(null, Validators.required);\r\n    product_id = new FormControl(null, Validators.required);\r\n    amount = new FormControl(0, Validators.required);    \r\n    price = new FormControl(0.0, Validators.required);    \r\n}","import { FormControl, Validators } from '@angular/forms';\r\n\r\nexport class UserForm {\r\n    id? = new FormControl(null);\r\n    role_id = new FormControl(null, Validators.required);\r\n    cpf = new FormControl(null, Validators.required);\r\n    email = new FormControl(null,Validators.required);\r\n    password = new FormControl(null,Validators.required);\r\n    name = new FormControl(null,Validators.required);\r\n    user = new FormControl(null,Validators.required);\r\n}","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(\r\n        private router: Router,\r\n        private authenticationService: AuthenticationService\r\n    ) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        const currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser) {\r\n            // logged in so return true\r\n            return true;\r\n        }\r\n\r\n        // not logged in so redirect to login page with the return url\r\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        return next.handle(request)\r\n        .pipe(catchError(err => {\r\n            if (err.status === 401) {\r\n                this.authenticationService.logout();\r\n                // const result = request?.url?.indexOf('login') > -1;\r\n                // if(!result) {\r\n                    location.reload(true);\r\n                // }\r\n            }\r\n\r\n            const error = err.error.errors|| err.error.message || err.statusText;\r\n            return throwError(error);\r\n        }))\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n    constructor(private authenticationService: AuthenticationService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with jwt token if available\r\n        let currentUser = this.authenticationService.currentUserValue;\r\n        if (currentUser && currentUser.access_token) {\r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: `Bearer ${currentUser.access_token}`\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { LoadingService } from '@shared/services/loading.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class LoadingInterceptorService {\r\n\r\n    activeRequests = 0;\r\n\r\n    constructor(\r\n        private loadingScreenService: LoadingService\r\n    ) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        if (this.activeRequests === 0) {\r\n            this.loadingScreenService.startLoading();\r\n        }\r\n\r\n        this.activeRequests++;\r\n\r\n        return next.handle(request).pipe(\r\n            finalize(() => {\r\n                this.activeRequests--;\r\n                if (this.activeRequests === 0) {\r\n                    this.loadingScreenService.stopLoading();\r\n                }\r\n            })\r\n        )\r\n    }\r\n}","import { Sale } from '@shared/models/sale';\r\nimport { Product } from '@shared/models/product';\r\nimport { User } from '@shared/models/user';\r\nimport { Category } from '@shared/models/category';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class PaginationHelper {\r\n\r\n    /**\r\n     * arrayOfPages - array with all pages numbers\r\n     * actual - actual page of screen\r\n     * \r\n     * return a range of 5 pagination\r\n     */\r\n    getPagination = (arrayOfPages,actual) => {\r\n        let pages = [];\r\n\r\n        if(actual != 1 && actual != -1) {\r\n            pages.push(actual-1);\r\n        }\r\n        \r\n        if(!actual) {\r\n            return -1;\r\n        }\r\n\r\n        for (let i = actual; i <= this.getLimiter(arrayOfPages, actual); i++)\r\n            pages.push(i);\r\n\r\n        return pages;\r\n    }\r\n\r\n    /**\r\n     * array - array with all pages numbers\r\n     * page - GET url parameters page\r\n     * \r\n     * return false if page is invalid \r\n     */\r\n    getActual = (array, page:number) => \r\n        (array.findIndex(index => (index+1) == page) + 1) || false;\r\n\r\n    /**\r\n     * array - array with all pages numbers\r\n     * actual - actual page of screen\r\n     * \r\n     * return the range limit to pagination\r\n     */\r\n    getLimiter = (array: number[], actual: number) => {\r\n        if (array.length > 3 && ((actual + 3) < array.length) && actual != 1) {\r\n            return actual + 3;\r\n        } else if(array.length > 4 && ((actual + 4) < array.length) && actual == 1) {\r\n            return actual + 4\r\n        } else {\r\n          return array.length;\r\n        }\r\n      }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { environment } from '@environment/environment';\r\nimport { User } from '@shared/models/user';\r\nimport { headers } from '@shared/helpers/headers';\r\n\r\n@Injectable({ providedIn: 'root' })\r\n\r\nexport class AuthenticationService {\r\n    private currentUserSubject: BehaviorSubject<User>;\r\n    public currentUser: Observable<User>;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.currentUserSubject = new BehaviorSubject<User>(JSON.parse(localStorage.getItem('currentUser')));\r\n        this.currentUser = this.currentUserSubject.asObservable();\r\n    }\r\n\r\n    public get currentUserValue(): User {\r\n        return this.currentUserSubject.value;\r\n    }\r\n\r\n    login = (user: string, password: string) => {\r\n        return this.http.post<any>(`${environment.apiUrl}/auth/login`, { user, password })\r\n            .pipe(map(user => {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('currentUser', JSON.stringify(user));\r\n                this.currentUserSubject.next(user);\r\n                return user;\r\n            }));\r\n    }\r\n\r\n    logout = () => {\r\n        // remove user from local storage to log user out\r\n        localStorage.removeItem('currentUser');\r\n        this.currentUserSubject.next(null);\r\n        return this.http.get<any>(`${environment.apiUrl}/auth/logout`);\r\n    }\r\n\r\n    findToken = (token) =>  this.http.get(`${environment.apiUrl}/password/find/${token}`);\r\n\r\n    createRecoveryPassord = (recoveryForm) => this.http.post(`${environment.apiUrl}/password/create`, recoveryForm)\r\n\r\n    recoveryPassword = (recoveryForm) => this.http.post(`${environment.apiUrl}/password/reset`, recoveryForm);\r\n\r\n    isLogged = () => {\r\n        return (this.currentUserValue);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Category } from '@shared/models/category';\r\n\r\nimport { environment } from '@environment/environment';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CategoriesService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  /**\r\n   * Return all categories\r\n   */\r\n  get = (page = -1):Observable<Category[]> => {\r\n    return this.http.get<Category[]>(`${environment.apiUrl}/categories?page=${page}`);\r\n  }\r\n\r\n  /**\r\n   * Return an category\r\n   */\r\n  find = (id):Observable<Category> => {\r\n    return this.http.get<Category>(`${environment.apiUrl}/categories/${id}`);\r\n  }\r\n\r\n  /**\r\n   * Store an category\r\n   */\r\n  store = (category) => {\r\n    return this.http.post(`${environment.apiUrl}/categories`, category);\r\n  }\r\n\r\n  /**\r\n   * Update an category\r\n   */\r\n  update = (category) => {\r\n    return this.http.put(`${environment.apiUrl}/categories/${category.id}`, category);\r\n  }\r\n\r\n  /**\r\n   * Delete an category\r\n   */\r\n  delete = (category) => {\r\n    return this.http.delete(`${environment.apiUrl}/categories/${category.id}`);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { environment } from \"@environment/environment\"\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FeedsService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  /**\r\n   * Return all products\r\n   */\r\n  get = (page = -1):Observable<any> => this.http.get(`${environment.apiUrl}/feeds`);\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoadingService {\r\n\r\n  loading$: Subject<boolean> = new Subject();\r\n\r\n  constructor() { }\r\n\r\n  startLoading = () => this.loading$.next(true)\r\n\r\n  stopLoading = () => this.loading$.next(false)\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '@environment/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NotificationsService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  /**\r\n   * Return all products\r\n   */\r\n  get = (user):Observable<any> => this.http.get(`${environment.apiUrl}/users/${user}/notifications`);\r\n  marAsRead = (user):Observable<any> => this.http.post(`${environment.apiUrl}/users/${user}/notifications/mark-as-read`, {});\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from \"@environment/environment\"\r\nimport { Product } from '@shared/models/product';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n\r\n  public filter: string = null;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  /**\r\n   * Return all products\r\n   */\r\n  get = (page = -1):Observable<Product[]> => this.http.get<Product[]>(`${environment.apiUrl}/products?page=${page}`);\r\n\r\n  /**\r\n   * Return an product\r\n   */\r\n  find = (id):Observable<Product> => this.http.get<Product>(`${environment.apiUrl}/products/${id}`);\r\n\r\n  /**\r\n   * Store an product\r\n   */\r\n  store = (product) =>  this.http.post(`${environment.apiUrl}/products`, product);\r\n  \r\n  /**\r\n   * Update an product\r\n   */\r\n  update = (product) => this.http.put(`${environment.apiUrl}/products/${product.id}`, product);\r\n\r\n  delete = (product) => this.http.delete(`${environment.apiUrl}/products/${product}`);\r\n\r\n  /**\r\n   * Search products\r\n   */\r\n  search = (filter, page?) => {\r\n    this.filter = filter;\r\n    return this.http.get(`${environment.apiUrl}/products/search?${filter}&page=${(page)?page:1}`);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { environment } from \"@environment/environment\"\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReportsService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  \r\n  /**\r\n   * Store a reports\r\n   */\r\n  obsoleteProducts = (report):Observable<any> => this.http.post(`${environment.apiUrl}/reports/obsolete-products`, report);\r\n\r\n  inventoryDownProducts = ():Observable<any> => this.http.get(`${environment.apiUrl}/reports/inventory-down-products`);\r\n  downloadInventoryDownProducts = ():Observable<any> => this.http.get(`${environment.downloadInventoryDownUrl}`);\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { environment } from '@environment/environment';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RolesService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getAll() {\r\n    return this.http.get(`${environment.apiUrl}/roles`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Sale } from '@shared/models/sale';\r\nimport { environment } from '@environment/environment';\r\nimport { Pagination } from '@shared/models/pagination';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SalesService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  /**\r\n   * Return all sales\r\n   */\r\n  get = (page = -1):Observable<Pagination> => {\r\n    return this.http.get<Pagination>(`${environment.apiUrl}/sales?page=${page}`);\r\n  }\r\n\r\n  /**\r\n   * Return an sale\r\n   */\r\n  find = (id):Observable<Sale> => {\r\n    return this.http.get<Sale>(`${environment.apiUrl}/sales/${id}`);\r\n  }\r\n\r\n  /**\r\n   * Store an sale\r\n   */\r\n  store = (sale: Sale) => {\r\n    return this.http.post(`${environment.apiUrl}/sales`, sale);\r\n  }\r\n  /**\r\n   * Update an sale\r\n   */\r\n  update = (sale) => {\r\n    return this.http.put(`${environment.apiUrl}/sales/${sale.id}`, sale);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { environment } from \"@environment/environment\"\r\nimport { User } from '@shared/models/user';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class UserService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    getAll = () => this.http.get<User[]>(`${environment.apiUrl}/users`);\r\n\r\n    /**\r\n     * Store an user\r\n     */\r\n    store = (user: User) => this.http.post(`${environment.apiUrl}/users`, user);\r\n\r\n    /**\r\n     * Update an user\r\n     */\r\n    update = (user: User) => this.http.put(`${environment.apiUrl}/users/${user?.id}`, user);\r\n\r\n    /**\r\n     * Find an user\r\n     */\r\n    find = (user) =>  this.http.get<User>(`${environment.apiUrl}/users/${user}`);\r\n\r\n    delete = (user) => this.http.delete(`${environment.apiUrl}/users/${user}`)\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\nimport * as M from 'materialize-css';\r\n@Component({\r\n  selector: 'app-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.scss']\r\n})\r\nexport class SidenavComponent implements OnInit {\r\n\r\n  user;\r\n\r\n  constructor(\r\n    private authService: AuthenticationService\r\n\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.user = this.authService.currentUserValue;    \r\n    M.Collapsible.init(document.querySelectorAll('.collapsible'), {\r\n      accordion: true\r\n    });\r\n\r\n    M.Sidenav.init(document.querySelectorAll('.sidenav'), {});\r\n\r\n  }\r\n\r\n  logout = () =>{\r\n    this.authService.logout()\r\n      .subscribe(\r\n        () => location.reload(true),\r\n        error => M.toast({html: error, classes: 'fail'})\r\n      );\r\n  }\r\n}\r\n","<ul id=\"slide-out\" class=\"sidenav sidenav-fixed\">\r\n  <li>\r\n    <a routerLink=\"/home\">\r\n      <i class=\"material-icons\">local_car_wash</i>\r\n      JF Peças Automotivas\r\n    </a>\r\n  </li>\r\n  <li><div class=\"divider\"></div></li>\r\n\r\n  <li class=\"no-padding\">\r\n    <ul\r\n      class=\"collapsible collapsible-accordion\"\r\n      data-collapsible=\"expandable\"\r\n      materialize=\"collapsible\"\r\n    >\r\n      <li>\r\n        <a class=\"collapsible-header\"\r\n          ><span class=\"material-icons icon\">arrow_drop_down</span\r\n          ><span>Cadastrar Produto</span></a\r\n        >\r\n        <div class=\"collapsible-body\">\r\n          <ul>\r\n            <li>\r\n              <a routerLink=\"/products\"\r\n                ><i class=\"material-icons\">add</i><span>Novo</span>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a routerLink=\"/inventory-add\"\r\n                ><i class=\"material-icons\">arrow_upward</i\r\n                ><span>Acrescentar ao estoque</span></a\r\n              >\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </li>\r\n\r\n  <li class=\"no-padding\">\r\n    <ul\r\n      class=\"collapsible collapsible-accordion\"\r\n      data-collapsible=\"expandable\"\r\n      materialize=\"collapsible\"\r\n    >\r\n      <li>\r\n        <a class=\"collapsible-header\"\r\n          ><span class=\"material-icons icon\">arrow_drop_down</span\r\n          ><span>Usuários</span></a\r\n        >\r\n        <div class=\"collapsible-body\">\r\n          <ul>\r\n            <li *ngIf=\"user?.role_id == 1\">\r\n              <a routerLink=\"/users-form\"\r\n                ><i class=\"material-icons\">add</i\r\n                ><span>Cadastrar Usuários</span></a\r\n              >\r\n            </li>\r\n            <li>\r\n              <a routerLink=\"/users\"\r\n                ><i class=\"material-icons\">people</i\r\n                ><span>Listas Usuários</span></a\r\n              >\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </li>\r\n\r\n  <li class=\"no-padding\">\r\n    <ul\r\n      class=\"collapsible collapsible-accordion\"\r\n      data-collapsible=\"expandable\"\r\n      materialize=\"collapsible\"\r\n    >\r\n      <li>\r\n        <a class=\"collapsible-header\"\r\n          ><span class=\"material-icons icon\">arrow_drop_down</span\r\n          ><span>Estoque</span></a\r\n        >\r\n        <div class=\"collapsible-body\">\r\n          <ul>\r\n            <li>\r\n              <a routerLink=\"/inventory-list\"\r\n                ><i class=\"material-icons\">list</i><span>Consultar</span></a\r\n              >\r\n            </li>\r\n            <li>\r\n              <a routerLink=\"/inventory-edit\"\r\n                ><i class=\"material-icons\">edit</i><span>Editar</span></a\r\n              >\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </li>\r\n\r\n  <li>\r\n    <a routerLink=\"/inventory-sell\"\r\n      ><i class=\"material-icons\">shopping_cart</i><span>Dar Baixa</span></a\r\n    >\r\n  </li>\r\n  <li>\r\n    <a routerLink=\"/sales\"\r\n      ><i class=\"material-icons\">assessment</i><span>Listar Baixas</span></a\r\n    >\r\n  </li>\r\n  <li>\r\n    <a routerLink=\"/categories\"\r\n      ><i class=\"material-icons\">bookmarks</i><span>Categorias</span></a\r\n    >\r\n  </li>\r\n  <li>\r\n    <a routerLink=\"/reports\"\r\n      ><i class=\"material-icons\">bar_chart</i><span>Gerar Relatórios</span></a\r\n    >\r\n  </li>\r\n  <li>\r\n    <a *ngIf=\"user\" [routerLink]=\"['users', user?.id]\"\r\n      ><i class=\"material-icons\">account_box</i><span>Editar Perfil</span></a\r\n    >\r\n  </li>\r\n  <li (click)=\"logout()\">\r\n    <a class=\"clickable\"\r\n      ><i class=\"material-icons\">cancel_presentation</i><span>Sair</span></a\r\n    >\r\n  </li>\r\n</ul>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport * as M from 'materialize-css';\r\nimport { UserForm } from '@shared/forms/users';\r\nimport { RolesService } from '@shared/services/roles.service';\r\nimport { UserService } from '@shared/services/user.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-users-form',\r\n  templateUrl: './users-form.component.html',\r\n  styleUrls: ['./users-form.component.scss']\r\n})\r\nexport class UsersFormComponent implements OnInit {\r\n  userForm: FormGroup;\r\n  roles;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private roleService: RolesService,\r\n    private service: UserService,\r\n    private route: ActivatedRoute\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    M.updateTextFields();\r\n    this.getAllRoles();\r\n    this.userForm = this.formBuilder.group(new UserForm);\r\n\r\n    if(this.route.snapshot.paramMap.get('id')) {\r\n      this.service.find(this.route.snapshot.paramMap.get('id'))\r\n        .subscribe(\r\n          data => {\r\n            this.userForm.patchValue(data);\r\n            M.updateTextFields();  \r\n          },\r\n          error => M.toast({ html:error, classes:'fail' })\r\n        )\r\n    }\r\n    M.updateTextFields();\r\n  }\r\n\r\n  getAllRoles = () => {\r\n    this.roleService.getAll()\r\n      .subscribe(\r\n        data => this.roles = data,\r\n        error => M.toast({html:error, classes:'fail'})\r\n      )\r\n  }\r\n\r\n  onSubmit() {\r\n    if(this.userForm?.value?.id) {\r\n      this.service.update(this.userForm?.value)\r\n        .subscribe(\r\n          data => M.toast({ html:'Atualizado com suceso', classes:'succes' }),\r\n          error => M.toast({ html: error, classes:'fail' })\r\n        )\r\n    } else {\r\n      this.service.store(this.userForm.value)\r\n        .subscribe(\r\n          data => M.toast({ html:'Criado com sucesso', classes:'succes' }),\r\n          error => M.toast({ html:error, classes:'fail' })\r\n        );\r\n    }\r\n  }\r\n\r\n  clean = () => this.userForm.reset();\r\n\r\n}\r\n","<form\r\n  class=\"col s8 card-panel\"\r\n  [formGroup]=\"userForm\"\r\n  autocomplete=\"off\"\r\n  autocomplete=\"false\"\r\n>\r\n  <div class=\"row\">\r\n    <div class=\"col s12 center-align\">\r\n      <h4>Cadastrar Usuários</h4>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">  \r\n\r\n    <div class=\"input-field col m4 s6\">\r\n      <input \r\n        type=\"text\" \r\n        placeholder=\"Nome\" \r\n        formControlName=\"name\"\r\n        />\r\n      <label for=\"name\">Nome</label>\r\n    </div>\r\n\r\n    <div class=\"input-field col m4 s6\">\r\n      <input \r\n        type=\"text\"\r\n        placeholder=\"CPF\"\r\n        formControlName=\"cpf\" \r\n        name=\"cpf\"\r\n        mask=\"000.000.000-00\"\r\n        />\r\n      <label for=\"cpf\">CPF</label>\r\n    </div>\r\n\r\n    <div class=\"input-field col m4 s12\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Usuário para login\"\r\n        formControlName=\"user\"\r\n        name=\"user\"\r\n      />\r\n      <label for=\"user\">Usuário</label>\r\n    </div>\r\n\r\n  </div>\r\n\r\n  <div class=\"row\">  \r\n\r\n    <div class=\"input-field col m4 s6\">\r\n      <input \r\n        type=\"email\" \r\n        placeholder=\"Email\" \r\n        formControlName=\"email\"\r\n        />\r\n      <label for=\"email\">Email</label>\r\n    </div>\r\n\r\n    <div class=\"input-field col m4 s6\">\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Senha\"\r\n        formControlName=\"password\"\r\n        name=\"password\"\r\n      />\r\n      <label for=\"password\">Password</label>\r\n    </div>\r\n\r\n    <div class=\"input-field col m4 s12\">\r\n      <ng-select\r\n        [items]=\"roles?.data\"\r\n        bindLabel=\"name\"\r\n        bindValue=\"id\"\r\n        formControlName=\"role_id\"\r\n        placeholder=\"Cargos\"\r\n        class=\"custom\"\r\n      ></ng-select>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col m3 s6 push-m3\">\r\n      <button class=\"btn red\" (click)=\"clean()\" *ngIf=\"!userForm?.value?.id\">\r\n        Limpar\r\n      </button>\r\n    </div>\r\n    <div class=\"col m3 s6 push-m3\">\r\n      <button\r\n        class=\"btn blue darken-1\"\r\n        (click)=\"onSubmit()\"\r\n        [disabled]=\"userForm?.invalid\"\r\n      >\r\n    {{ (userForm?.value?.id) ? \"Editar\":\"Cadastrar\" }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '@shared/services/user.service';\r\nimport * as M from 'materialize-css';\r\nimport { ErrorInterceptor } from '@shared/helpers/error.interceptor';\r\nimport { AuthenticationService } from '@shared/services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-users',\r\n  templateUrl: './users.component.html',\r\n  styleUrls: ['./users.component.scss']\r\n})\r\nexport class UsersComponent implements OnInit {\r\n\r\n  usersInfos;\r\n  authUser;\r\n\r\n  constructor(\r\n    private service: UserService,\r\n    private authService: AuthenticationService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authUser = this.authService.currentUserValue;\r\n    this.getUsers();\r\n  }\r\n\r\n  getUsers = () => this.service.getAll()\r\n    .subscribe(\r\n      data => this.usersInfos = data,\r\n      error => M.toast({ html:error, classes:'fail' })\r\n    )\r\n\r\n  delete = (user) => {\r\n    this.service.delete(user?.id)\r\n      .subscribe(\r\n        data => this.getUsers(),\r\n        error => M.toast({ html:error, classes:'fail' })\r\n      )\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col s12\">\r\n        <h3 style=\"text-align: center;\">Usuários</h3>\r\n    </div>\r\n</div>\r\n\r\n<table class=\"striped responsive-table\">\r\n    <thead>\r\n        <tr>\r\n            <th>Nome</th>\r\n            <th>Usuário</th>\r\n            <th>CPF</th>\r\n            <th>Tipo</th>\r\n            <th *ngIf=\"authUser.role_id === 1\">Editar</th>\r\n            <th *ngIf=\"authUser.role_id === 1\">Excluir</th>\r\n        </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n        <tr *ngFor=\"let user of usersInfos?.data\">\r\n            <td>{{ user?.name }}</td>\r\n            <td>{{ user?.user }}</td>\r\n            <td>{{ user?.cpf }}</td>\r\n            <td>{{ user?.role.name }}</td>\r\n            <td *ngIf=\"authUser.role_id === 1\">\r\n                <a class=\"orange-text\" routerLink=\"//users/{{user.id}}\">\r\n                    <i class=\"material-icons\">\r\n                        create\r\n                    </i>\r\n                </a>\r\n            </td>\r\n            <td *ngIf=\"authUser.role_id === 1\">\r\n                <a class=\"red-text clickable\" (click)=\"delete(user)\">\r\n                    <i class=\"material-icons\">\r\n                        delete\r\n                    </i>\r\n                </a>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: \"http://localhost:8080\",\r\n  getInventoryDownUrl: \"http://localhost:8080/reports/pdf/get-inventory-down-products\",\r\n  downloadInventoryDownUrl: \"http://localhost:8080/reports/pdf/download-inventory-down-products\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}